{
  "components": [
    {
      "id": 1,
      "name": "DataObject",
      "description": "",
      "type": "Class",
      "path": "",
      "pathtype": "Direct",
      "category": "Data",
      "props": [
        {
          "name": "id",
          "type": "String",
          "description": "Id of the DataObject",
          "default": "null",
          "example": "",
          "required": true
        },
        {
          "name": "viewName",
          "type": "String",
          "description": "Viewname from which to select",
          "default": "null",
          "example": "",
          "required": true
        },
        {
          "name": "appId",
          "type": "String",
          "description": "App id to which this DataObject belongs to",
          "default": "null",
          "example": "",
          "required": false
        },
        {
          "name": "uniqueTable",
          "type": "String",
          "default": "undefined",
          "description": "Table used for inserting, updating and deleting records.",
          "example": "",
          "required": false
        },
        {
          "name": "expandView",
          "type": "Boolean",
          "description": "When true will add context filtering in the backend",
          "default": "null",
          "required": false
        },
        {
          "name": "deleteConfirm",
          "type": "Boolean",
          "default": "false",
          "description": "Show confirmation prompt before deleting a row.",
          "example": "",
          "required": false
        },
        {
          "name": "allowInsert",
          "type": "Boolean",
          "default": "false",
          "description": "Allow inserting rows from this DataObject.",
          "example": "",
          "required": false
        },
        {
          "name": "allowUpdate",
          "type": "Boolean",
          "default": "false",
          "description": "Allow updating rows from this DataObject.",
          "example": "",
          "required": false
        },
        {
          "name": "allowDelete",
          "type": "Boolean",
          "default": "false",
          "description": "Allow deleting rows from this DataObject.",
          "example": "",
          "required": false
        },
        {
          "name": "createNewAtTheEnd",
          "type": "Boolean",
          "description": "Push new records instead of unshifting them.",
          "default": "false",
          "example": "",
          "required": false
        },
        {
          "name": "clientSideFiltering",
          "type": "Boolean",
          "description": "Use already retrieved data when filtering instead of fetching from database",
          "default": "false",
          "example": "",
          "required": false
        },
        {
          "name": "disableSaveOncurrentIndexChange",
          "type": "Boolean",
          "default": "false",
          "description": "Skip saving tries when current index is changed.",
          "example": "",
          "required": false
        },
        {
          "name": "selectFirstRowOnLoad",
          "type": "Boolean",
          "default": "false",
          "description": "Selects first row on load",
          "example": "",
          "required": false
        },
        {
          "name": "fields",
          "type": "DataObjectDefinitionFieldType[]",
          "description": "List of select fields used by this DataObject.",
          "default": "undefined",
          "example": "",
          "required": true
        },
        {
          "name": "viewDefinition",
          "type": "ViewDefinitionFieldType[]",
          "description": "View definition object used to set up DataObject.Fields.",
          "default": "undefined",
          "example": "",
          "required": false
        },
        {
          "name": "uniqueTableDefinition",
          "type": "ViewDefinitionFieldType[]",
          "description": "Unique table definition oobject used to set up DataObject.Fields.",
          "default": "undefined",
          "example": "",
          "required": false
        },
        {
          "name": "disableLayouts",
          "type": "Boolean",
          "description": "Disable layout module.",
          "default": "false",
          "example": "",
          "required": false
        },
        {
          "name": "filterString",
          "type": "String",
          "description": "Initial filter string.",
          "default": "undefined",
          "example": "",
          "required": false
        },
        {
          "name": "filterObject",
          "type": "Object",
          "description": "Filter Object.",
          "default": "undefined",
          "example": "",
          "params": [
            {
              "name": "columns",
              "type": "Array"
            },
            {
              "name": "urlFiltering",
              "type": "Boolean"
            },
            {
              "name": "filterItems",
              "type": "Object"
            },
            {
              "name": "dataObject",
              "type": "DataObject"
            },
            {
              "name": "columnDistinctOptions",
              "type": "Object"
            },
            {
              "name": "distinctOptions",
              "type": "Array"
            },
            {
              "name": "activeFilter",
              "type": "String"
            },
            {
              "name": "activeFilterObject",
              "type": "Object"
            },
            {
              "name": "filterString",
              "type": "String"
            },
            {
              "name": "getItem",
              "type": "Function",
              "params": [
                {
                  "name": "Field",
                  "type": "String"
                }
              ],
              "returns": [
                {
                  "name": "operator",
                  "type": "String",
                  "template": "between | contains | begin | inlist | notinlist | equals | dateequals | notequals | datenotequals | greaterthanorequal | greaterthan | lessthan | isfalse | istrue | isnull | isnotnull | isblank | isnotblank"
                },
                {
                  "name": "selectedValue",
                  "type": "String",
                  "description": "Filterstring basically. Use 'isfalse' or 'istrue' for boolean/bit values instead of 1 and 0"
                }
              ]
            }
          ],
          "required": false
        },
        {
          "name": "whereClause",
          "type": "String",
          "description": "Initial where clause.",
          "default": "undefined",
          "example": "",
          "required": false
        },
        {
          "name": "distinctRows",
          "type": "Boolean",
          "description": "Select distinct rows.",
          "default": "false",
          "example": "",
          "required": false
        },
        {
          "name": "maxRecords",
          "type": "Number",
          "description": "Max records used in retrieve requests.",
          "default": -1,
          "example": "",
          "required": false
        },
        {
          "name": "loadRecents",
          "type": "Boolean",
          "description": "Load recents for lookups. Default is false here, but it can be enabled by the lookup component itself.",
          "default": "false",
          "example": "",
          "required": false
        },
        {
          "name": "dynamicLoading",
          "type": "Boolean",
          "description": "Use dynamic loading (legacy paging | virtual list paging ). Default is false, but it can be enabled by the grid component.",
          "default": "raw => !(raw.treeColumnDefinition || raw.groupBy)",
          "example": "",
          "required": false
        },
        {
          "name": "optimisticLocking",
          "type": "Boolean",
          "description": "Don't allow updates if Updated value is diffrent from currently loaded one",
          "default": "false",
          "example": "",
          "required": false
        },
        {
          "name": "dataHandler",
          "type": "IDataHandler<T>",
          "description": "Optional custom DataHandler class, must implement IDataHandler interface.",
          "default": "DataHandler",
          "example": "",
          "required": false
        },
        {
          "name": "masterDataObject_ID",
          "type": "String",
          "description": "Id of the master DataObject if this DataObject has MasterDetails defined",
          "default": "null",
          "example": "",
          "required": false
        },
        {
          "name": "masterDetailDefinition",
          "type": "MasterDetailsDefinition[]",
          "description": "MasterDetails bindings",
          "default": "null",
          "example": "",
          "required": false
        },
        {
          "name": "disableAutoLoad",
          "type": "Boolean",
          "description": "Don't auto load this details object when master index changes",
          "default": "false",
          "example": "",
          "required": false
        },
        {
          "name": "enableProperties",
          "type": "Boolean",
          "description": "When set to true will check fop properties configuration in the database and attempt to initialize properties data extension",
          "default": "null",
          "example": "",
          "required": false
        },
        {
          "name": "disableSaveOnBeforeLoad",
          "type": "Boolean",
          "description": "When true will stop attempting to save changes when load is called",
          "default": "false",
          "example": "",
          "required": false
        },
        {
          "name": "localizeFields",
          "type": "Boolean",
          "description": "To call localize fields prop. Used for translating Headers",
          "default": "null",
          "example": "",
          "required": false
        }
      ],
      "events": [
        {
          "name": "FieldChanged",
          "params": [
            {
              "name": "fieldName",
              "description": "Name of field that was changed",
              "type": "String"
            },
            {
              "name": "newValue",
              "description": "New Value of field",
              "type": "any"
            },
            {
              "name": "oldValue",
              "description": "Value of field before it was touched",
              "type": "any"
            },
            {
              "name": "currentValues"
            },
            {
              "name": "row",
              "type": "Object"
            }
          ] 
        },
        {
          "name": "ChangesCancelled",
          "params": [
            {
              "name": "rows",
              "type": "Array"
            }
          ] 
        },
        {
          "name": "BeforeDelete",
          "params": [
            {
              "name": "options",
              "type": "Object"
            },
            {
              "name": "row",
              "type": "Object"
            }
          ] 
        },
        {
          "name": "AfterDelete",
          "params": [
            {
              "name": "options",
              "type": "Object"
            },
            {
              "name": "row",
              "type": "Object"
            }
          ] 
        },
        {
          "name": "BeforeSoftDelete",
          "params": [
            {
              "name": "options",
              "type": "Object"
            },
            {
              "name": "row",
              "type": "Object"
            }
          ] 
        },
        {
          "name": "AfterSoftDelete",
          "params": [
            {
              "name": "options",
              "type": "Object"
            },
            {
              "name": "row",
              "type": "Object"
            }
          ] 
        },
        {
          "name": "CurrentIndexChanging",
          "params": [
            {
              "name": "prevIndex",
              "type": "Number"
            },
            {
              "name": "newIndex",
              "type": "Number"
            }
          ] 
        },
        {
          "name": "CurrentIndexChanged",
          "params": [
            {
              "name": "prevIndex",
              "type": "Number"
            },
            {
              "name": "newIndex",
              "type": "Number"
            }
          ] 
        },
        {
          "name": "BeforeLoad",
          "params": [
            {
              "name": "options",
              "type": "Object"
            }
          ] 
        },
        {
          "name": "DataLoaded",
          "params": [
            {
              "name": "data",
              "type": "Array"
            },
            {
              "name": "options",
              "type": "Object"
            }
          ] 
        },
        {
          "name": "AfterSave",
          "params": [
            {
              "name": "options",
              "type": "Object"
            },
            {
              "name": "operation",
              "type": "create | update"
            },
            {
              "name": "row",
              "type": "Object"
            },
            {
              "name": "dataItem",
              "type": "Object"
            }
          ] 
        },
        {
          "name": "BeforeSave",
          "params": [
            {
              "name": "options",
              "type": "Object"
            },
            {
              "name": "row",
              "type": "Object"
            },
            {
              "name": "dataItem",
              "type": "Object"
            }
          ] 
        },
        {
          "name": "BeforeUpdate",
          "params": [
            {
              "name": "options",
              "type": "Object"
            },
            {
              "name": "row",
              "type": "Object"
            }
          ] 
        },
        {
          "name": "BeforeCreate",
          "params": [
            {
              "name": "options",
              "type": "Object"
            },
            {
              "name": "row",
              "type": "Object"
            }
          ] 
        },
        {
          "name": "DynamicDataLoaded",
          "params": [
            {
              "name": "pClear",
              "type": "Object"
            },
            {
              "name": "pNewData",
              "type": "Object"
            }
          ] 
        },
        {
          "name": "BeforeBulkDelete",
          "params": [
            {
              "name": "options",
              "type": "Object"
            },
            {
              "name": "item",
              "type": "Object"
            }
          ] 
        },
        {
          "name": "BeforeExport",
          "params": [
            {
              "name": "pExportConfig",
              "type": "Object"
            }
          ] 
        },
        {
          "name": "BeforeExportTemplate",
          "params": [
            {
              "name": "pTemplateType",
              "type": "String"
            },
            {
              "name": "pExportConfig",
              "type": "Object"
            }
          ] 
        }
      ],
      "slots": [],
      "params": [],
      "snippets": [],
      "exposes": [
        {
          "name": "reshiftItem",
          "type": "Function",
          "default": "",
          "description": "Reshifts items to new position.",
          "example": "dsWorkflows.reshiftItem(vIndexOfItem, vNewIndex)",
          "required": false
        },
        {
          "name": "getDataLength",
          "type": "Function",
          "default": "",
          "params": [],
          "description": "Gets number of rows",
          "example": "dsWorkflows.getDataLength()",
          "required": false
        },
        {
          "name": "fileUpload",
          "type": "Object",
          "default": "",
          "description": "",
          "example": "",
          "required": false
        },
        {
          "name": "masterDetails",
          "type": "Object",
          "params": [
            {
              "name": "loadDetailDataObjects",
              "type": "Function",
              "description": "",
              "params": [],
              "required": false
            }
          ],
          "required": false
        },
        {
          "name": "nodeData",
          "type": "Object",
          "default": "null",
          "params": [
            {
              "name": "addConfiguration",
              "type": "Function",
              "params": [
                {
                  "name": "pOptions",
                  "type": "Object",
                  "default": "null",
                  "params": [
                    {
                      "name": "type",
                      "type": "String",
                      "default": "null",
                      "example": "groupBy",
                      "required": true
                    },
                    {
                      "name": "field",
                      "type": "String | String[]",
                      "default": "null",
                      "example": "Field1",
                      "required": true
                    }
                  ],
                  "required": false
                }
              ],
              "default": "null",
              "required": false
            },
            {
              "name": "setGroupBy",
              "type": "Function",
              "default": "null",
              "params": [
                {
                  "name": "pFields",
                  "type": "Array",
                  "default": "[]",
                  "example": "['Field1', 'Field2', 'Field3']",
                  "required": true
                }
              ],
              "required": false
            },
            {
              "name": "enable",
              "type": "Function",
              "params": [],
              "default": "null",
              "required": false
            }
          ],
          "required": false
        },
        {
          "name": "createNew",
          "type": "Function",
          "description": "Create new item in datasource.",
          "default": "",
          "params": [
            {
              "name": "pColumns",
              "type": "Object",
              "description": "All required fields in datasource.",
              "required": true
            },
            {
              "name": "pSetCurrentIndex",
              "type": "Boolean",
              "default": "true",
              "description": "Will set current index to newly created item",
              "required": false
            },
            {
              "name": "pAppendRowCount",
              "type": "Boolean",
              "default": "true",
              "description": "",
              "required": false
            }
          ],
          "required": false
        },
        {
          "name": "recordSource",
          "type": "Object",
          "description": "",
          "params": [
            {
              "name": "refreshRowsByFilter",
              "type": "Function",
              "default": "null",
              "description": "Refreshed rows by filter",
              "example": "dsObject.recordSource.refreshRowsByFilter(`[ID] = ${ID}`)",
              "required": false
            },
            {
              "name": "refreshRow",
              "type": "Function",
              "default": "null",
              "description": "Refreshed rows by index or current row",
              "example": "dsObject.recordSource.refreshRow()",
              "params": [
                {
                  "name": "index",
                  "type": "Number",
                  "default": "null",
                  "required": false
                }
              ],
              "required": false
            }
          ],
          "required": false
        },
        {
          "name": "selectionControl",
          "type": "Object",
          "params": [
            {
              "name": "selectedRows",
              "type": "Array"
            },
            {
              "name": "isCopying",
              "type": "Boolean"
            },
            {
              "name": "selectAllLoading",
              "type": "Boolean"
            },
            {
              "name": "allRowsSelected",
              "type": "Boolean"
            },
            {
              "name": "selectedDataItems",
              "description": "Will be populated with the selected rows",
              "type": "Set"
            },
            {
              "name": "dataObject",
              "description": "Current dataobject",
              "type": "DataObject"
            },
            {
              "name": "selection",
              "type": "Object",
              "params": [
                {
                  "name": "start",
                  "type": "Object",
                  "params": [
                    {
                      "name": "x",
                      "type": "Number"
                    },
                    {
                      "name": "y",
                      "type": "Number"
                    },
                    {
                      "name": "container",
                      "type": "String"
                    }
                  ]
                },
                {
                  "name": "end",
                  "type": "Object",
                  "params": [
                    {
                      "name": "x",
                      "type": "Number"
                    },
                    {
                      "name": "y",
                      "type": "Number"
                    },
                    {
                      "name": "container",
                      "type": "String"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "id": 2,
      "name": "alert",
      "description": "Used to alert user",
      "type": "Function",
      "category": "Utilities",
      "path": "o365.controls.alert.ts",
      "pathtype": "Direct",
      "props": [],
      "params": [
        {
          "name": "pText",
          "type": "String",
          "default": ""
        },
        {
          "name": "pType",
          "default": "danger",
          "type": "danger | info | success | warning | primary"
        },
        {
          "name": "pOptions",
          "type": "Object",
          "params": [
            {
              "name": "autohide",
              "type": "Boolean",
              "default": "false",
              "required": false
            },
            {
              "name": "delay",
              "type": "Number",
              "default": "5000",
              "required": false
            },
            {
              "name": "toastClass",
              "type": "String | CSS classes",
              "default": "null",
              "required": false
            },
            {
              "name": "slimVersion",
              "type": "Boolean",
              "default": "false",
              "required": false
            }
          ]
        }
      ],
      "slots": [],
      "events": [],
      "exposes": [
        {
          "name": "updateMessage",
          "type": "Function",
          "description": "Update message of alert",
          "params": [
            {
              "name": "pMessage",
              "type": "String",
              "description": "New message",
              "required": true
            }
          ],
          "required": false
        },
        {
          "name": "updateType",
          "type": "Function",
          "description": "Update type of alert",
          "params": [
            {
              "name": "pType",
              "type": "String",
              "template": "danger | info | success",
              "required": true
            }
          ],
          "required": false
        },
        {
          "name": "close",
          "type": "Function",
          "description": "Closes alert",
          "params": [],
          "required": false
        }
      ],
      "snippets": [
        {
          "title": "Error",
          "content": "When displaying alert for error",
          "code": "{COMPONENT}('Something Went Wrong', 'danger')",
          "language": "javascript"
        },
        {
          "title": "Disappear after xTime",
          "content": "When displaying alert for info",
          "code": "{COMPONENT}('Information', 'info', { autohide: true, timeout: 3000 })",
          "language": "javascript"
        }
      ]
    },
    {
      "id": 3,
      "name": "confirm",
      "description": "Function that prompts the user with a confirm dialog",
      "type": "Function",
      "category": "Utilities",
      "path": "o365.controls.confirm.ts",
      "pathtype": "Direct",
      "props": [],
      "params": [
        {
          "name": "pOptions",
          "type": "Object",
          "default": "",
          "required": false,
          "params": [
            {
              "name": "message",
              "type": "String",
              "required": true
            },
            {
              "name": "title",
              "type": "String",
              "required": false
            },
            {
              "name": "btnClassOk",
              "type": "String",
              "default": "btn-primary",
              "required": false
            },
            {
              "name": "btnClassCancel",
              "type": "String",
              "default": "btn-secondary",
              "required": false
            },
            {
              "name": "btnTextOk",
              "type": "String",
              "default": "Ok",
              "required": false
            },
            {
              "name": "btnTextCancel",
              "type": "String",
              "default": "Cancel",
              "required": false
            },
            {
              "name": "textInputRequired",
              "type": "Boolean",
              "default": "false",
              "required": false
            },
            {
              "name": "initialTextInputValue",
              "type": "String",
              "required": false
            },
            {
              "name": "backdrop",
              "type": "Boolean",
              "default": "false",
              "required": false
            },
            {
              "name": "buttons",
              "type": "Object",
              "params": [
                {
                  "name": "class",
                  "type": "String | CSS classes",
                  "required": false
                },
                {
                  "name": "text",
                  "type": "String",
                  "required": false
                },
                {
                  "name": "action",
                  "type": "Function",
                  "template": "(pConfirm: () => any, pCancel: () => any) => void",
                  "required": false
                }
              ],
              "required": false
            }
          ]
        }
      ],
      "slots": [],
      "events": [],
      "snippets": [
        {
          "title": "Example",
          "content": "",
          "code": "{COMPONENT}({ title: 'Confirm title', message: 'Confirm message to display' }).then(() => { // Handle action confirmed }).catch(() => { // Handle confirm rejected });",
          "language": "javascript"
        }
      ]
    },
    {
      "id": 4,
      "name": "DataGrid",
      "description": "Grid for sorting, filtering and displaying data",
      "type": "Component",
      "category": "Grid",
      "path": "o365.vue.components.DataGrid.vue",
      "pathtype": "Direct",
      "codebuilder_shortcuts": [
        {
          "keys": ["alt", "c"],
          "component_id": 5,
          "props": ["field", "sortable", "headerName"]
        }
      ],
      "props": [
        {
          "name": "dataObject",
          "type": "DataObject",
          "default": "null",
          "description": "The data object used in the grid",
          "required": false
        },
        {
          "name": "columns",
          "type": "Array",
          "default": "null",
          "description": "Columns passed as an array instead of slots",
          "required": false
        },
        {
          "name": "data",
          "type": "Array",
          "default": "",
          "description": "",
          "required": false
        },
        {
          "name": "rowClass",
          "type": "[Function, Object, String]",
          "default": "null",
          "description": "String, dynamic class object or function that will be bound to the row class property. The current row is provided to the function as an argument.",
          "required": false
        },
        {
          "name": "rowStyle",
          "type": "[Function, Object, String]",
          "default": "null",
          "description": "String, dynamic class object or function that will be bound to the row class property. The current row is provided to the function as an argument.",
          "required": false
        },
        {
          "name": "headerTitle",
          "type": "String",
          "default": "null",
          "description": "",
          "required": false
        },
        {
          "name": "menuTabs",
          "type": "Record<String, any>[]",
          "default": "null",
          "description": "An array of custom tab definitions for the grid sidemenu details tab.",
          "required": false
        },
        {
          "name": "rowclickhandler",
          "type": "Function",
          "default": "null",
          "description": "Override the row click handler, when provided will not set current index",
          "required": false
        },
        {
          "name": "noHeader",
          "type": "Boolean",
          "default": "false",
          "description": "When set to `true` will not render header.",
          "required": false
        },
        {
          "name": "noHeaderRow",
          "type": "Boolean",
          "default": "false",
          "description": "When set to `true` will not render header row, but will still render the header container.",
          "required": false
        },
        {
          "name": "noFooter",
          "type": "Boolean",
          "default": "false",
          "description": "When set to `true` will not render footer.",
          "required": false
        },
        {
          "name": "disableFilterRow",
          "type": "Boolean",
          "default": "false",
          "description": "When set to `true` will not render filter row.",
          "required": false
        },
        {
          "name": "detailIframe",
          "type": "String",
          "default": "null",
          "description": "Path for detail iframe",
          "template": ":detailIframe=\"`/nt/your_app_here?ID=${ID_TO_CHILD}&HideNav=true&Context=${dsYourDataSource.current.Domain_ID}`\"",
          "required": false
        },
        {
          "name": "detailTabTitle",
          "type": "String",
          "default": "null",
          "description": "The label used on the detail iframe tab",
          "required": false
        },
        {
          "name": "multilineHeader",
          "type": "Boolean",
          "default": "false",
          "description": "Enables word wrapping for header columns",
          "required": false
        },
        {
          "name": "importData",
          "type": "Boolean",
          "default": "false",
          "description": "When true, will show importData",
          "required": false
        },
        {
          "name": "initialMenuWidth",
          "type": "String",
          "default": "400px",
          "description": "Sets the initial width of the grid menu, accepts values either in 'px' or '%' ",
          "required": false
        },
        {
          "name": "groupByFolders",
          "type": "Boolean",
          "default": "false",
          "description": "Adds group by folders selector into right panel",
          "required": false
        },
        {
          "name": "dynamicLoading",
          "type": "Boolean",
          "default": "true",
          "description": "Enables dynamic loading for the grid. When set to false will set the inner height to loaded data length.",
          "required": false
        },
        {
          "name": "disableNavigation",
          "type": "Boolean",
          "default": "false",
          "description": "When set to `true` will disable grid navigation features.",
          "required": false
        },
        {
          "name": "collapseGridMenu",
          "type": "Boolean",
          "default": "false",
          "description": "When set to `true` the grid setup menu will be initially collapsed.",
          "required": false
        },
        {
          "name": "newRecordsPosition",
          "type": "Boolean",
          "default": "above-filters",
          "description": "Position where new records are rendered.",
          "required": false
        },
        {
          "name": "disableSelectAll",
          "type": "Boolean",
          "default": "false",
          "description": "When set to `true` the select all checkbox will not render",
          "required": false
        },
        {
          "name": "hideGridMenu",
          "type": "Boolean",
          "default": "false",
          "description": "When set to `true` will not render the grid setup menu.",
          "required": false
        },
        {
          "name": "fieldFilters",
          "type": "Array",
          "default": "null",
          "description": "An array of initial field filters. For example `['Title', {name:'StatusCode', distinct:'StatusCode'}]`",
          "required": false
        },
        {
          "name": "disableDeleteConfirm",
          "type": "Boolean",
          "default": "false",
          "description": "When true will disable confirm dialog on delete actions in grid.",
          "required": false
        },
        {
          "name": "noRowsFound",
          "type": "String | Boolean",
          "default": "'No rows found...'",
          "description": "Then set to true, will show default message and enable for custom overriding via 'noRowsFound' slot. Can also be used to override default message.",
          "required": false
        },
        {
          "name": "eagerGridControl",
          "type": "Function",
          "default": "null",
          "description": "Returns grid control ref immediately after creation",
          "required": false
        },
        {
          "name": "onDemandFields",
          "type": "Boolean",
          "default": "false",
          "description": "Select list will contain only visible grid columns and sort order columns set on data object",
          "required": false
        },
        {
          "name": "loadDataObject",
          "type": "Boolean",
          "default": "false",
          "description": "When set to true the grid will load the dataobject after mount",
          "required": false
        },
        {
          "name": "softDelete",
          "type": "Boolean",
          "default": "",
          "description": "Use soft delete for ActionDelete in grid",
          "required": false
        },
        {
          "name": "autoFilterDebounce",
          "type": "Number",
          "default": "500",
          "description": "If provided will filter automaticly when typing in filter cells with the debounce value.",
          "required": false
        },
        {
          "name": "noGroupByContainer",
          "type": "Boolean",
          "default": "false",
          "description": "Will disable the group by container, used when you don't want to allow the user to change group by settings",
          "required": false
        },
        {
          "name": "groupColumnDefinition",
          "type": "any",
          "default": "null",
          "description": "The column definition used when grouping is enabled for the Group column",
          "required": false
        },
        {
          "name": "treeColumnDefinition",
          "type": "any",
          "default": "null",
          "description": "The column definition used to render TreeColumn when treeify is enabled on the provided dataobject",
          "required": false
        },
        {
          "name": "itemsToRender",
          "type": "Number",
          "default": "500",
          "description": "Initial number of items to render for visual scroll.",
          "required": false
        },
        {
          "name": "createNewOverrideFn",
          "type": "Function",
          "default": "null",
          "description": "Function for creating new",
          "required": false
        },
        {
          "name": "hideSystemColumn",
          "type": "Boolean",
          "default": "false",
          "description": "When set to true will not render system column (current row indicator)",
          "required": false
        },
        {
          "name": "disableSorting",
          "type": "Boolean",
          "default": "false",
          "description": "When set to true will disable sorting",
          "required": false
        },
        {
          "name": "activeRows",
          "type": "Boolean",
          "default": "true",
          "description": "When set to false will not stylize active (current) row",
          "required": false
        },
        {
          "name": "disableBatchRecords",
          "type": "Boolean",
          "default": "false",
          "description": "When set to true will disable the new record button and new records container",
          "required": false
        },
        {
          "name": "hideActionColumn",
          "type": "Boolean",
          "default": "false",
          "description": "When set to true will not render action column",
          "required": false
        },
        {
          "name": "hideMultiselectColumn",
          "type": "Boolean",
          "default": "false",
          "description": "When set to true will not render multi-select column",
          "required": false
        },
        {
          "name": "showNewRecordsPanel",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "required": false
        },
        {
          "name": "hideNewRecords",
          "type": "Boolean",
          "default": "raw => !!raw.isLookup",
          "description": "When set to true will skip rendering of the new record rows",
          "required": false
        },
        {
          "name": "detailMessageChannelId",
          "type": "String",
          "default": "null",
          "description": "Optional id to enable the message channel on the detail iframe",
          "required": false
        },
        {
          "name": "detailMessageChannelFunctions",
          "type": "String",
          "default": "null",
          "description": "Map of functions callable by the iframe message channel",
          "required": false
        }
      ],
      "slots": [
        {
          "name": "detailTab",
          "description": "Alternative to rendering detail Iframe",
          "template": "#detailTab"
        },
        {
          "name": "detailActions",
          "template": "#detailActions"
        },
        {
          "name": "cardheader",
          "template": "#cardheader"
        },
        {
          "name": "noRowsFound",
          "template": "#noRowsFound"
        },
        {
          "name": "overlay",
          "template": "#overlay"
        },
        {
          "name": "contextmenuTop",
          "template": "#contextmenuTop=\"{row, column, close}\""
        },
        {
          "name": "contextmenu",
          "template": "#contextmenu=\"{row, column, close}\""
        },
        {
          "name": "contextmenuBottom",
          "template": "#contextmenuBottom=\"{row, column, close}\""
        },
        {
          "name": "statusbar",
          "template": "#statusbar"
        }
      ],
      "events": [
        {
          "name": "mounted",
          "description": "",
          "syntax": "@mounted=\"\""
        },
        {
          "name": "beforeCreate",
          "description": "Fires before row is created",
          "syntax": "@beforeCreate=\"\""
        }
      ],
      "params": [],
      "exposes": [
        {
          "name": "dataColumns",
          "type": "Array"
        },
        {
          "name": "setViewPortWidth",
          "type": "Function"
        },
        {
          "name": "dataGridControl",
          "type": "Object"
        },
        {
          "name": "setScrollPosition",
          "type": "Function"
        },
        {
          "name": "getScrollPosition",
          "type": "Function"
        }
      ],
      "snippets": [
        {
          "title": "Example",
          "content": "",
          "code": "<{COMPONENT} multilineHeader :dataObject=\"\"><{COMPONENT=5} field=\"\" /></{COMPONENT}>",
          "language": "html"
        },
        {
          "title": "File Grid Example",
          "content": "",
          "code": "<{COMPONENT=68} :dataObject=\"dsFiles\" @error=\"{COMPONENT=2}($t('Something went wrong'), 'danger', { autohide: true, timeout: 3000 })\" @uploaded=\"dsFiles.load()\"><{COMPONENT=44}><{COMPONENT} multilineHeader :headerTitle=\"$t('Files')\" :dataObject=\"dsFiles\"><template #cardheader><{COMPONENT=69} :dataObject=\"dsFiles\"><i class=\"bi-upload\"/>{{ $t('Upload files') }}</{COMPONENT=69}></template><{COMPONENT=6} colId=\"FilesGroup\" groupBy boldDisplay onlyShowOnGroupBy pinned=\"left\" userAggregates /><{COMPONENT=5} field=\"Extension\" width=\"50\" sortable v-slot=\"{ row }\"><{COMPONENT=59} :extension=\"row.Extension\" /></{COMPONENT=5}><{COMPONENT=5} field=\"FileName\" width=\"200\" sortable v-slot=\"{ row }\"><{COMPONENT=75} :dataObject=\"dsFiles\" :row=\"row\" /></{COMPONENT=5}><{COMPONENT=5} field=\"FileSize\" width=\"100\" sortable v-slot=\"{ row }\">{{ {COMPONENT=76}(row.FileSize) }}</{COMPONENT=5}></{COMPONENT}></{COMPONENT=44}></{COMPONENT=68}>",
          "language": "html"
        },
        {
          "title": "Focus Grid Cell",
          "content": "Code for focusing specific cell in datagrid",
          "code": "const focusGridCell = (pGridRef, pCellString, pManualFocusElement = false) => {let vCell = pGridRef.dataGridControl.navigation.getCellFromString(pCellString);let vCellElement = pGridRef.dataGridControl.navigation._getCellElement(vCell) if (!pManualFocusElement) { pGridRef.dataGridControl.navigation.setFocus(vCell); vCellElement?.focus(); } return vCellElement; }",
          "language": "javascript"
        }
      ]
    },
    {
      "id": 5,
      "name": "Column",
      "description": "Used in {COMPONENT=4} and {COMPONENT=7}",
      "type": "Component",
      "category": "Grid",
      "path": "o365.vue.components.DataGrid.Column.jsx",
      "pathtype": "Direct",
      "props": [
        {
          "name": "pinned",
          "type": "left | right",
          "default": "",
          "description": "",
          "example": "",
          "required": false
        },
        {
          "name": "colId",
          "type": "String",
          "default": "null",
          "description": "ptional unique id used for unbound columns.  ",
          "example": "",
          "required": false
        },
        {
          "name": "field",
          "type": "String",
          "default": "null",
          "description": "Field from Data Object",
          "example": "",
          "required": false
        },
        {
          "name": "width",
          "type": "Number",
          "default": "from field",
          "description": "width of column",
          "example": "",
          "required": false
        },
        {
          "name": "minWidth",
          "type": "Number",
          "default": "50",
          "description": "minimum width of column",
          "example": "",
          "required": false
        },
        {
          "name": "flexwidth",
          "type": "Number (0-100)",
          "default": "null",
          "description": "A percentage of the unused width that should be added to this column. If provided, should be a value between 1 = 100",
          "example": ":flexwidth=\"69\"",
          "required": false
        },
        {
          "name": "editable",
          "type": "Boolean",
          "default": "false",
          "description": "Enabled editing",
          "example": "",
          "required": false
        },
        {
          "name": "sortable",
          "type": "Boolean",
          "default": "false",
          "description": "Enabled sorting",
          "example": "",
          "required": false
        },
        {
          "name": "menu",
          "type": "Boolean",
          "default": "true",
          "description": "disabled menu on this column",
          "example": "",
          "required": false
        },
        {
          "name": "hide",
          "type": "Boolean",
          "default": "false",
          "description": "hides column from view. Can still be selected from Column Chooser",
          "example": "",
          "required": false
        },
        {
          "name": "format",
          "type": "String",
          "default": "null",
          "description": "Format used by default editors and when rendering values.",
          "example": "",
          "required": false
        },
        {
          "name": "filter",
          "type": "Component",
          "default": "OFilter",
          "description": "Can be used to provide custom filter component.",
          "example": "",
          "required": false
        },
        {
          "name": "filterField",
          "type": "Component",
          "default": "OFilter",
          "description": "Optional field to use for filtering instead of the main 'field' of column",
          "example": "",
          "required": false
        },
        {
          "name": "cellrenderer",
          "type": "Component | String",
          "default": "null",
          "description": "Optional cell renderer component definition or registered component name. When provided overrides #default slot",
          "example": "",
          "required": false
        },
        {
          "name": "celleditor",
          "type": "Component",
          "default": "null",
          "description": "Optional cell renderer component definition or registered component name. When provided overrides #editor slot",
          "example": "",
          "required": false
        },
        {
          "name": "cellrendererparams",
          "type": "Object",
          "default": "null",
          "description": "Additional props object that will be provided to the cell renderer component",
          "example": ":cellrendererparams=\"{href:'/nt/workflow-task?ID={{ID}}',target:'_workflow_item'}\"",
          "required": false
        },
        {
          "name": "celleditorparams",
          "type": "Object",
          "default": "null",
          "description": "",
          "example": "",
          "required": false
        },
        {
          "name": "cellTitle",
          "type": "Function | String",
          "default": "null",
          "description": "Cell tooltip function. Should be a function that takes in a row and returns a string",
          "example": ":cellTitle=\"function(pRow) { pRow.Name }\"",
          "required": false
        },
        {
          "name": "cellStyle",
          "type": "Function | String",
          "default": "null",
          "description": "Cell style. Can either be a static one for all cells or a per row function",
          "example": "",
          "required": false
        },
        {
          "name": "disableDistinct",
          "type": "Boolean",
          "default": "false",
          "description": "disabled distinct filter for this column's field",
          "example": "",
          "required": false
        },
        {
          "name": "suppressSelection",
          "type": "Boolean",
          "default": "false",
          "description": "Disable drag selection for this column",
          "example": "",
          "required": false
        },
        {
          "name": "bulkUpdate",
          "type": "Boolean",
          "default": "false",
          "description": "Enable bulk update for this column",
          "example": "",
          "required": false
        },
        {
          "name": "singleClickEdit",
          "type": "Boolean",
          "default": "true",
          "description": "Enter edit mode after a single click on this column",
          "example": "",
          "required": false
        },
        {
          "name": "utc",
          "type": "Boolean",
          "default": "false",
          "description": "When enabled will force UTC mode for datepickers and formatted date renderers",
          "example": "",
          "required": false
        },
        {
          "name": "getCopyValue",
          "type": "Function",
          "default": "null",
          "description": "Function called when copying values that takes in a row and returns the value for copying.",
          "example": "",
          "required": false
        },
        {
          "name": "disableResize",
          "type": "Boolean",
          "default": "false",
          "description": "disables resizing of this column.",
          "example": "disableResize",
          "required": false
        },
        {
          "name": "class",
          "type": "String | CSS classes",
          "default": "null",
          "description": "Class for all cells in this column.",
          "example": "class=\"bg-secondary p-2\"",
          "required": false
        },
        {
          "name": "required",
          "type": "Boolean",
          "default": "false",
          "description": "sets column/field as required when editing",
          "example": "",
          "required": false
        },
        {
          "name": "sortField",
          "type": "Field",
          "default": "null",
          "description": "Field to sort on",
          "example": "",
          "required": false
        },
        {
          "name": "summaryRound",
          "type": "String",
          "default": "null",
          "description": "",
          "example": "",
          "required": false
        },
        {
          "name": "summaryFormat",
          "type": "String",
          "default": "null",
          "description": "",
          "example": "",
          "required": false
        },
        {
          "name": "summaryAggregate",
          "type": "String | Function",
          "default": "null",
          "description": "",
          "example": "",
          "required": false
        },
        {
          "name": "groupAggregate",
          "type": "Column",
          "default": "null",
          "description": "Aggregate column",
          "example": "",
          "required": false
        },
        {
          "name": "groupAggregateFn",
          "type": "Function",
          "default": "null",
          "description": "",
          "example": "",
          "required": false
        },
        {
          "name": "fallbackValue",
          "type": "String",
          "default": "null",
          "description": "",
          "example": "",
          "required": false
        },
        {
          "name": "resizable",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "example": "",
          "required": false
        },
        {
          "name": "hideFromChooser",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "example": "",
          "required": false
        },
        {
          "name": "disableGrouping",
          "type": "Boolean",
          "default": "false",
          "description": "Do not allow grouping of this column",
          "example": "",
          "required": false
        },
        {
          "name": "colspan",
          "type": "Number",
          "default": "12",
          "description": "Span of this column",
          "example": "",
          "required": false
        },
        {
          "name": "headerName",
          "type": "String",
          "default": "null",
          "description": "name for header cell",
          "required": false
        },
        {
          "name": "headerTitle",
          "type": "String",
          "default": "null",
          "description": "",
          "required": false
        }
      ],
      "slots": [
        {
          "name": "editor",
          "description": "The cell editor slot to be used when in edit mode",
          "template": "#editor=\"{row}\""
        },
        {
          "name": "bulkupdateeditor",
          "description": "The bulk update editor slot",
          "template": "#bulkupdateeditor=\"{row}\""
        },
        {
          "name": "headertext",
          "description": "Replaces label text contet of the header cell with this slot",
          "template": "#headertext"
        },
        {
          "name": "headerMenu",
          "description": "Add custom menu items to the header menu for this column",
          "template": "#headerMenu=\"{column, open}\""
        },
        {
          "name": "summary",
          "description": "The cell summary slot to be used for rendering summary values",
          "template": "#summary=\"{row}\""
        },
        {
          "name": "contextmenuTop",
          "description": "Custom context menu items rendered at the top",
          "template": "#contextmenuTop"
        },
        {
          "name": "contextmenuBottom",
          "description": "Custom context menu items rendered at the bottom",
          "template": "#contextmenuBottom"
        },
        {
          "name": "overlay",
          "description": "Overlay over the entire column",
          "template": "#overlay"
        }
      ],
      "events": [],
      "params": [],
      "snippets": []
    },
    {
      "id": 6,
      "name": "NodeColumn",
      "description": "Used in {COMPONENT=4} for grouping",
      "type": "Component",
      "category": "Grid",
      "path": "o365.vue.components.DataGrid.NodeColumn.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": "pinned",
          "type": "left | right",
          "default": "null",
          "description": "",
          "required": false
        },
        {
          "name": "field",
          "type": "String",
          "default": "null",
          "description": "Field from Data Object",
          "example": "",
          "required": false
        },
        {
          "name": "headerName",
          "type": "String",
          "default": "Group",
          "description": "",
          "required": false
        },
        {
          "name": "headerTitle",
          "type": "String",
          "default": "null",
          "description": "",
          "required": false
        },
        {
          "name": "width",
          "type": "Number",
          "default": "400",
          "description": "width of column",
          "example": "",
          "required": false
        },
        {
          "name": "minWidth",
          "type": "Number",
          "default": "50",
          "description": "minimum width of column",
          "example": "",
          "required": false
        },
        {
          "name": "flexwidth",
          "type": "Number (0-100)",
          "default": "null",
          "description": "A percentage of the unused width that should be added to this column. If provided, should be a value between 1 = 100",
          "example": ":flexwidth=\"69\"",
          "required": false
        },
        {
          "name": "editable",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "required": false
        },
        {
          "name": "filter",
          "type": "Component",
          "default": "OFilter",
          "description": "Can be used to provide custom filter component.",
          "example": "",
          "required": false
        },
        {
          "name": "boldDisplay",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "required": false
        },
        {
          "name": "cellTitle",
          "type": "Function | String",
          "default": "null",
          "description": "Cell tooltip function. Should be a function that takes in a row and returns a string",
          "example": ":cellTitle=\"function(pRow) { pRow.Name }\"",
          "required": false
        },
        {
          "name": "cellStyle",
          "type": "Function | String",
          "default": "null",
          "description": "Cell style. Can either be a static one for all cells or a per row function",
          "example": "",
          "required": false
        },
        {
          "name": "getDisplay",
          "type": "Function",
          "default": "null",
          "description": "",
          "example": ":getDisplay=\"function(pRow) { pRow.Name }\"",
          "required": false
        },
        {
          "name": "indent",
          "type": "Number | String",
          "default": "24",
          "description": "",
          "required": false
        },
        {
          "name": "classFn",
          "type": "Function",
          "default": "null",
          "description": "",
          "example": ":classFn=\"function(pNode) {}\"",
          "required": false
        },
        {
          "name": "getCopyValue",
          "type": "Function",
          "default": "null",
          "description": "Function called when copying values that takes in a row and returns the value for copying.",
          "example": ":getCopyValue=\"function(pNode) {}\"",
          "required": false
        },
        {
          "name": "filterField",
          "type": "String",
          "default": "null",
          "description": "Optional field to use for filter instead of the main 'field' of column",
          "example": "",
          "required": false
        },
        {
          "name": "sortField",
          "type": "String",
          "default": "null",
          "description": "Optional field to use for sorting instead of the main 'field' of column",
          "example": "",
          "required": false
        },
        {
          "name": "sortable",
          "type": "Boolean",
          "default": "false",
          "description": "Enabled sorting",
          "example": "",
          "required": false
        },
        {
          "name": "disableMenu",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "required": false
        },
        {
          "name": "disableResize",
          "type": "Boolean",
          "default": "false",
          "description": "disables resizing of this column.",
          "example": "disableResize",
          "required": false
        },
        {
          "name": "showPrefix",
          "type": "Boolean",
          "default": "false",
          "description": "When true the default renderer will display column captions for group by configurations ",
          "required": false
        },
        {
          "name": "hideCount",
          "type": "Boolean",
          "default": "false",
          "description": "When true the default rednerer will not display detail counts",
          "required": false
        },
        {
          "name": "groupBy",
          "type": "Boolean",
          "default": "false",
          "description": "Enable group by mode in grid",
          "required": false
        },
        {
          "name": "cellrendererparams",
          "type": "Object",
          "default": "null",
          "description": "Additional props object that will be provided to the cell renderer component",
          "example": ":cellrendererparams=\"{href:'/nt/workflow-task?ID={{ID}}',target:'_workflow_item'}\"",
          "required": false
        },
        {
          "name": "loadFullStructure",
          "type": "Boolean",
          "default": "false",
          "description": "Enable client side node structure",
          "required": false
        },
        {
          "name": "userAggregates",
          "type": "Boolean",
          "default": "false",
          "description": "Enable user defined aggregates",
          "required": false
        },
        {
          "name": "onlyShowOnGroupBy",
          "type": "Boolean",
          "default": "false",
          "description": "When enabled this column will only be visible in grid when there is active group by",
          "required": false
        }
      ],
      "exposes": [
        {
          "name": "colId",
          "type": "String"
        }
      ],
      "slots": [],
      "events": [],
      "params": [],
      "snippets": [
        {
          "title": "Example",
          "content": "",
          "code": "<{COMPONENT} colId=\"Group\" groupBy boldDisplay onlyShowOnGroupBy pinned=\"left\" userAggregates />",
          "language": "html"
        }
      ]
    },
    {
      "id": 7,
      "name": "DataLookup",
      "description": "Lookup component. Takes {COMPONENT=5} component as children.",
      "type": "Component",
      "category": "Lookup",
      "path": "o365.vue.components.DataLookup.vue",
      "pathtype": "Direct",
      "codebuilder_shortcuts": [
        {
          "keys": ["alt", "c"],
          "component_id": 5,
          "props": ["field", "sortable", "headerName"]
        }
      ],
      "snippets": [
        {
          "title": "Example",
          "content": "",
          "code": "<{COMPONENT} :dataObject=\"\"v-model=\"\":bind=\"sel=>{}\"></{COMPONENT}>",
          "language": "html"
        },
        {
          "title": "Multiselect Lookup",
          "content": "Selected rows can be accessed by passing a function in :bind",
          "code": "<{COMPONENT} :dataObject=\"\" v-model=\"\" :value=\"vSelectedRowsString\" multiselect :bind=\"sel=>{}\"><{COMPONENT=5} field=\"SomeField\"/></{COMPONENT}>",
          "language": "html"
        }
      ],
      "props": [
        {
          "name": "multiselect",
          "type": "Boolean",
          "default": "false",
          "description": "Enables multiple selection",
          "required": false
        },
        {
          "name": "disabled",
          "type": "Boolean",
          "default": "false",
          "description": "Disables lookup.",
          "example": "",
          "required": false
        },
        {
          "name": ":bind",
          "type": "Function",
          "default": "null",
          "description": "",
          "example": ":bind=\"sel => { vValue = sel.ID }\"",
          "required": false
        },
        {
          "name": "placeholder",
          "type": "String",
          "default": "null",
          "description": "",
          "example": "",
          "required": false
        },
        {
          "name": "columns",
          "type": "Array",
          "default": "null",
          "description": "",
          "example": "",
          "required": false
        },
        {
          "name": "height",
          "type": "Number | String",
          "default": "",
          "description": "",
          "example": "",
          "required": false
        },
        {
          "name": "whereClause",
          "type": "String",
          "default": "null",
          "description": "Set custom whereclause on dataobject in Lookup. Can be used to create bound whereclauses.",
          "example": ":whereClause=\"`[${your_field}] IS NOT NULL`\"",
          "required": false
        },
        {
          "name": "reloadOnWhereClauseChange",
          "type": "Boolean",
          "default": "false",
          "description": "For when you need the lookup to reload on any where clause change.",
          "example": "",
          "required": false
        },
        {
          "name": "itemLoaded",
          "type": "Boolean",
          "default": "false",
          "description": "For use in multiselect.",
          "example": "",
          "required": false
        },
        {
          "name": "currentRow",
          "type": "Object",
          "default": "null",
          "description": "For setting currentRow on mobile.",
          "example": ":currentRow=\"{ID: value}\"",
          "required": false
        },
        {
          "name": "title",
          "type": "String",
          "default": "null",
          "description": "Tooltip title for lookup on desktop. Will be used as header for lookup on mobile.",
          "example": "title=\"CustomTitle\"",
          "required": false
        },
        {
          "name": "noSearch",
          "type": "Boolean",
          "default": "false",
          "description": "Disables search",
          "required": false
        },
        {
          "name": "focusField",
          "type": "String",
          "default": "null",
          "description": "By default the desktop lookup will autofocus first visible column filter field. Use this prop to specify other field.",
          "required": false
        }
      ],
      "slots": [
        {
          "name": "header",
          "template": "#header"
        },
        {
          "name": "actions",
          "template": "#actions"
        },
        {
          "name": "desktopActions",
          "template": "#desktopActions"
        },
        {
          "name": "target",
          "description": "To use custom target instead of <input> you can pass #target slot. Scope object {target, open} is passed to this slot. By default a click listener is attached to the target that opens the lookup. This can be turned off with suppressClickEvent property on <{COMPONENT=7}>",
          "template": "#target=\"{target}\""
        }
      ],
      "events": [
        {
          "name": "beforeopen",
          "syntax": "@beforeopen=\"\""
        },
        {
          "name": "beforeclose",
          "syntax": "@beforeclose=\"\""
        }
      ],
      "params": []
    },
    {
      "id": 8,
      "name": "ButtonGroup",
      "description": "Button Group is often used in combination with {COMPONENT=4}",
      "type": "Component",
      "category": "WIN",
      "path": "WIN365.vue.components.ButtonGroup.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": "onClickShowHidden",
          "type": "Function",
          "default": "() => {}",
          "description": "Fires when \"Show Hidden\" btn is clicked and displayShowHidden prop is active",
          "example": "",
          "required": false
        },
        {
          "name": "displayCommonTasks",
          "type": "Boolean",
          "default": "false",
          "description": "Displays \"Common Tasks\" dropdown. Usually functionality like \"Create new\" go in here.",
          "example": "",
          "required": false
        },
        {
          "name": "displayReports",
          "type": "Boolean",
          "default": "false",
          "description": "Displays \"Reports\" dropdown. Reports for your application go usually in here. Enables for #reports slot",
          "example": "",
          "required": false
        },
        {
          "name": "displayFilters",
          "type": "Boolean",
          "default": "false",
          "description": "For grid filters, like \"Include Inactive\". Enables for #filters slot.",
          "example": "",
          "required": false
        },
        {
          "name": "displayShowHidden",
          "type": "Boolean",
          "default": "false",
          "description": "Adds buttons to show hidden",
          "example": "",
          "required": false
        },
        {
          "name": "smallButtons",
          "type": "Boolean",
          "default": "false",
          "description": "When true displays smaller buttons instead",
          "example": "",
          "required": false
        },
        {
          "name": "handleDefaultFilterLinkClick",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "example": "",
          "required": false
        },
        {
          "name": "reportsAutoClose",
          "type": "true | inside | outside | false",
          "default": "true",
          "description": "Auto closed reports.",
          "example": "",
          "required": false
        },
        {
          "name": "filtersAutoClose",
          "type": "true | inside | outside | false",
          "default": "true",
          "description": "",
          "example": "",
          "required": false
        },
        {
          "name": "tasksAutoClose",
          "type": "true | inside | outside | false",
          "default": "true",
          "description": "Auto closes taks",
          "example": "",
          "required": false
        },
        {
          "name": "enableTaskSpinner",
          "type": "Boolean",
          "default": "false",
          "required": false
        }
      ],
      "slots": [
        {
          "name": "prepend",
          "description": "Adds buttons to the front of the buttongroup",
          "template": "#prepend"
        },
        {
          "name": "commonTasks",
          "description": "Items will be added in \"Common Tasks\" dropdown.",
          "template": "#commonTasks"
        },
        {
          "name": "filters",
          "description": "Items will be added into \"Filters\" dropdown. displayFilter prop must be true to show this slot.",
          "template": "#filters"
        },
        {
          "name": "reports",
          "description": "Items will be added into \"Reports\" dropdown. displayReports prop is required for this to show.",
          "template": "#reports"
        },
        {
          "name": "append",
          "description": "Add items to the end of the button group",
          "template": "#append"
        }
      ],
      "events": [],
      "params": [],
      "snippets": [
        {
          "title": "Example",
          "content": "",
          "code": "<{COMPONENT} displayCommonTasks displayFilters>\n  <template #commonTasks>\n</template>\n  <template #filters>\n</template>\n</{COMPONENT}>",
          "language": "html"
        }
      ]
    },
    {
      "id": 9,
      "name": "Modal",
      "description": "",
      "type": "Component",
      "category": "Modal",
      "path": "o365.vue.components.Modal.vue",
      "pathtype": "Direct",
      "exposes": [],
      "props": [
        {
          "name": "title",
          "type": "String",
          "default": "null",
          "description": "",
          "example": "",
          "required": false
        },
        {
          "name": "name",
          "type": "String",
          "default": "null",
          "description": "",
          "example": "",
          "required": false
        },
        {
          "name": "to",
          "type": "String",
          "default": "body",
          "description": "HTML Tag where modal should be rendered.",
          "example": "",
          "required": false
        },
        {
          "name": "modalOptions",
          "type": "Object",
          "default": "null",
          "description": "Setting backdrop as static will tell the modal to not close when clicked outside.",
          "params": [
            {
              "name": "backdrop",
              "type": "Boolean | String",
              "example": "static"
            }
          ],
          "required": false
        },
        {
          "name": "class",
          "type": "String | CSS classes",
          "default": "null",
          "description": "HTML Classes",
          "example": "",
          "required": false
        },
        {
          "name": "dialogClass",
          "type": "String | CSS classes",
          "default": "null",
          "description": "",
          "example": "",
          "required": false
        },
        {
          "name": "disableTeleport",
          "type": "Boolean",
          "default": "false",
          "description": "Disabled teleport and renders modal directly where it is located inside your HTML code.",
          "example": "",
          "required": false
        },
        {
          "name": "alwaysRender",
          "type": "Boolean",
          "default": "false",
          "description": "Will always render modal. If false it will render when modal opens.",
          "example": "",
          "required": false
        },
        {
          "name": "dataBsFocus",
          "type": "String",
          "default": "null",
          "description": "",
          "example": "",
          "required": false
        }
      ],
      "slots": [
        {
          "name": "headerAction",
          "description": "",
          "template": "#headerAction"
        }
      ],
      "events": [
        {
          "name": "shown",
          "description": "The event is emitted when the modal is shown and the css transactions have finished",
          "syntax": "@shown=\"\""
        },
        {
          "name": "show",
          "description": "The event is emitted when modal is transitioning to show",
          "syntax": "@show=\"\""
        },
        {
          "name": "hidden",
          "description": "The event is emitted when the modal is hidden and the css transactions have finished",
          "syntax": "@hidden=\"\""
        },
        {
          "name": "hide",
          "description": "The event is emitted when the modal is hidden and the css transactions have finished",
          "syntax": "@hide=\"\""
        }
      ],
      "params": [],
      "snippets": [
        {
          "title": "Example",
          "content": "Use classes like modal-(sm, md, lg, xl, xxl) to adjust modal size",
          "code": "<button type=\"button\" class=\"btn btn-primary\" @click=\"vModalRef.show()\">Open modal</button><{COMPONENT} ref=\"vModalRef\"><div class=\"modal-dialog modal-xl\"><div class=\"modal-content\"><div class=\"modal-header\"><h1 class=\"modal-title fs-5\" id=\"exampleModalLabel\">Modal title</h1><button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button></div><div class=\"modal-body\"></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-outline-secondary\" data-bs-dismiss=\"modal\">{{ $t('Close') }}</button><button type=\"button\" class=\"btn btn-primary\">{{ $t('Save') }}</button></div></div></div></{COMPONENT}>",
          "language": "html"
        },
        {
          "title": "Send Mail Modal",
          "content": "Put in File for modal",
          "code": "<template><{COMPONENT} ref=\"vModalRef\"><div class=\"modal-dialog modal-xl\"><div class=\"modal-content\"><div class=\"modal-header\"><h1 class=\"modal-title\">{{ $t('Send Mail') }}</h1><button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button></div><{COMPONENT=44} class=\"modal-body\"><{COMPONENT=77} ref=\"vSendEmailComponent\" /></{COMPONENT=44}><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-outline-secondary\" data-bs-dismiss=\"modal\">{{ $t('Close') }}</button><button type=\"button\" class=\"btn btn-primary\" @click=\"sendEmail\">{{ $t('Send') }}</button></div></div></div></{COMPONENT}></template>",
          "script": "",
          "language": "html"
        }
      ]
    },
    {
      "id": 10,
      "name": "Form",
      "description": "NB: This component does not actually contain a form element",
      "type": "Component",
      "category": "Form",
      "path": "o365.vue.components.Form.vue",
      "pathtype": "Direct",
      "props": [],
      "slots": [],
      "events": [],
      "params": [],
      "snippets": [
        {
          "title": "Example",
          "content": "Is basicly just a card",
          "code": "<{COMPONENT}>\n</{COMPONENT}>",
          "language": "html"
        }
      ]
    },
    {
      "id": 11,
      "name": "FormControl",
      "description": "",
      "type": "Component",
      "category": "Form",
      "path": "o365.vue.components.FormControl.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": "title",
          "type": "String",
          "default": "null",
          "description": "Title shown over input",
          "example": "",
          "required": false
        },
        {
          "name": "for",
          "type": "String",
          "default": "null",
          "description": "ID of input field referencing to this label.",
          "required": false
        },
        {
          "name": "helpText",
          "type": "String",
          "default": "null",
          "description": "Helper text for clarifying a input field.",
          "example": "",
          "required": false
        },
        {
          "name": "inline",
          "type": "Boolean",
          "default": "false",
          "description": "Will display label and input next to each other.",
          "example": "",
          "required": false
        },
        {
          "name": "inlineClasses",
          "type": "Array",
          "default": "null",
          "description": "classes for inline group.",
          "example": "['col-1', 'col-6']",
          "required": false
        }
      ],
      "slots": [],
      "events": [],
      "params": [],
      "snippets": [
        {
          "title": "Example",
          "content": "Form Control Example with Input",
          "code": "<{COMPONENT} :title=\"$t('Example')\" for=\"exampleInput\"><input type=\"text\" id=\"exampleInput\" class=\"form-control\" v-model=\"vExampleValue\"></{COMPONENT}>",
          "language": "html"
        }
      ]
    },
    {
      "id": 12,
      "name": "PersonsLookup",
      "description": "",
      "type": "Component",
      "category": "Lookup",
      "path": "o365.vue.components.PersonsLookup.vue",
      "pathtype": "Direct",
      "props": [],
      "slots": [],
      "events": [],
      "params": [],
      "snippets": [
        {
          "title": "Example",
          "content": "For use outside of grid. Remove class when using inside DataGrid",
          "code": "<div class=\"row\"><{COMPONENT=11} class=\"col\" :title=\"$t('Person')\"><{COMPONENT} class=\"form-select\" v-model=\"vPersonName\" :bind=\"sel=>{ vPerson_ID = sel.ID; vPersonName = sel.Name; }\" /></{COMPONENT=11}></div>",
          "language": "html"
        }
      ]
    },
    {
      "id": 13,
      "name": "OrgUnitsLookup",
      "description": "",
      "type": "Component",
      "category": "Lookup",
      "path": "o365.vue.components.OrgUnitsLookup.vue",
      "pathtype": "Direct",
      "props": [],
      "slots": [],
      "events": [],
      "params": [],
      "snippets": []
    },
    {
      "id": 14,
      "name": "CustomersLookup",
      "description": "",
      "type": "Component",
      "category": "WIN/Lookup",
      "path": "WIN365.vue.components.CustomersLookup.vue",
      "pathtype": "Direct",
      "props": [],
      "slots": [],
      "events": [],
      "params": [],
      "snippets": []
    },
    {
      "id": 15,
      "name": "SuppliersLookup",
      "description": "",
      "type": "Component",
      "category": "WIN/Lookup",
      "path": "WIN365.vue.components.SuppliersLookup.vue",
      "pathtype": "Direct",
      "props": [],
      "slots": [],
      "events": [],
      "params": [],
      "snippets": []
    },
    {
      "id": 16,
      "name": "CompaniesLookup",
      "description": "",
      "type": "Component",
      "category": "WIN/Lookup",
      "path": "WIN365.vue.components.CompaniesLookup.vue",
      "pathtype": "Direct",
      "props": [],
      "slots": [],
      "events": [],
      "params": [],
      "snippets": [
        {
          "title": "Example",
          "content": "For use outside of grid. Remove class when using inside DataGrid",
          "code": "<div class=\"row\"><{COMPONENT=11} class=\"col\" :title=\"$t('Company')\"><{COMPONENT} class=\"form-select\" v-model=\"vCompanyName\" :bind=\"sel=>{ vCompany_ID = sel.ID; vCompanyName = sel.NAme; }\" /></{COMPONENT=11}></div>",
          "language": "html"
        }
      ]
    },
    {
      "id": 17,
      "name": "GangsLookup",
      "description": "",
      "type": "Component",
      "category": "WIN/Lookup",
      "path": "WIN365.vue.components.GangsLookup.vue",
      "pathtype": "Direct",
      "props": [],
      "slots": [],
      "events": [],
      "params": [],
      "snippets": [
        {
          "title": "Example",
          "content": "For use outside of grid. Remove class when using inside DataGrid",
          "code": "<div class=\"row\"><{COMPONENT=11} class=\"col\" :title=\"$t('Gang')\"><{COMPONENT} class=\"form-select\" v-model=\"vGangName\" :bind=\"sel=>{ vGang_ID = sel.ID; vGangName = sel.Description; }\" /></{COMPONENT=11}></div>",
          "language": "html"
        }
      ]
    },
    {
      "id": 18,
      "name": "WorkPackagesLookup",
      "description": "",
      "type": "Component",
      "category": "WIN/Lookup",
      "path": "WIN365.vue.components.WorkPackagesLookup.vue",
      "pathtype": "Direct",
      "props": [],
      "slots": [],
      "events": [],
      "params": [],
      "snippets": []
    },
    {
      "id": 19,
      "name": "DisciplinesLookup",
      "description": "",
      "type": "Component",
      "category": "WIN/Lookup",
      "path": "WIN365.vue.components.DisciplinesLookup.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": ":bind",
          "type": "Row",
          "description": "Used to bind seleted values to your variables",
          "params": [
            {
              "name": "ID",
              "type": "Number"
            },
            {
              "name": "No",
              "type": "String"
            },
            {
              "name": "Description",
              "type": "String"
            },
            {
              "name": "NoAndDescription",
              "type": "String"
            },
            {
              "name": "Domain_ID",
              "type": "Number"
            },
            {
              "name": "PrimKey",
              "type": "String"
            }
          ]
        }
      ],
      "slots": [],
      "events": [],
      "params": [],
      "snippets": []
    },
    {
      "id": 20,
      "name": "SFILookup",
      "description": "",
      "type": "Component",
      "category": "WIN/Lookup",
      "path": "WIN365.vue.components.SFILookup.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": ":bind",
          "type": "Row",
          "description": "Used to bind seleted values to your variables",
          "params": [
            {
              "name": "ID",
              "type": "Number"
            },
            {
              "name": "No",
              "type": "String"
            },
            {
              "name": "Description",
              "type": "String"
            },
            {
              "name": "NoAndDescription",
              "type": "String"
            },
            {
              "name": "System",
              "type": "String"
            },
            {
              "name": "Domain_ID",
              "type": "Number"
            }
          ]
        }
      ],
      "slots": [],
      "events": [],
      "params": [],
      "snippets": []
    },
    {
      "id": 21,
      "name": "ArticlesLookup",
      "description": "",
      "type": "Component",
      "category": "WIN/Lookup",
      "path": "WIN365.vue.components.ArticlesLookup.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": ":bind",
          "type": "Row",
          "description": "Used to bind seleted values to your variables",
          "example": ":bind=\"sel=>{ vArticle_ID = sel.ID }\"",
          "params": [
            {
              "name": "ID",
              "type": "Number"
            },
            {
              "name": "No",
              "type": "String"
            },
            {
              "name": "DescriptionNOR",
              "type": "String"
            },
            {
              "name": "Description",
              "type": "String"
            },
            {
              "name": "ShortDescription",
              "type": "String"
            },
            {
              "name": "Unit",
              "type": "String"
            }
          ]
        }
      ],
      "slots": [],
      "events": [],
      "params": [],
      "snippets": [
        {
          "title": "Example",
          "content": "For use outside of grid. Remove class when using inside DataGrid",
          "code": "<div class=\"row\"><{COMPONENT=11} class=\"col\" :title=\"$t('Article')\"><{COMPONENT=40} validate :title=\"vArticleNo\" :invalidFeedback=\"$t('You forgot to fill you this field!')\"><{COMPONENT} class=\"form-select\" v-model=\"vArticleDescription\" :bind=\"sel=>{ vArticle_ID = sel.ID; vArticleNo = sel.No; vArticleDescription = sel.Description; }\" /></{COMPONENT=40}></{COMPONENT=11}></div>",
          "language": "html"
        }
      ]
    },
    {
      "id": 22,
      "name": "OrdersLookup",
      "description": "",
      "type": "Component",
      "category": "WIN/Lookup",
      "path": "WIN365.vue.components.OrdersLookup.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": ":bind",
          "type": "Row",
          "description": "Used to bind seleted values to your variables",
          "example": ":bind=\"sel=>{ vOrderID = sel.ID }\"",
          "params": [
            {
              "name": "ID",
              "type": "Number"
            },
            {
              "name": "OrderName",
              "type": "String"
            },
            {
              "name": "Domain_ID",
              "type": "Number"
            },
            {
              "name": "IdPath",
              "type": "String"
            },
            {
              "name": "OrderNo",
              "type": "String"
            },
            {
              "name": "ProjectNo",
              "type": "String"
            },
            {
              "name": "Project_ID",
              "type": "Number"
            }
          ]
        }
      ],
      "slots": [],
      "events": [],
      "params": [],
      "snippets": [
        {
          "title": "Orders Lookup Example",
          "content": "For use outside of grid. Remove class when using inside {COMPONENT=4}",
          "code": "<div class=\"row\"><{COMPONENT=11} class=\"col\" :title=\"$t('Order:')\"><{COMPONENT=40} validate :title=\"vOrderNo\" invalidFeedback=\"You forgot to fill you this field!\"><{COMPONENT} class=\"form-select\" v-model=\"vOrderName\" :bind=\"sel=>{ vOrderNo = sel.OrderNo; vOrder_ID = sel.ID; vOrderName = sel.OrderName; }\" /></{COMPONENT=40}></{COMPONENT=11}></div>",
          "language": "html"
        }
      ]
    },
    {
      "id": 23,
      "name": "ProjectsLookup",
      "description": "",
      "type": "Component",
      "category": "WIN/Lookup",
      "path": "WIN365.vue.components.ProjectsLookup.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": ":bind",
          "type": "Row",
          "description": "Used to bind seleted values to your variables",
          "params": [
            {
              "name": "ID",
              "type": "Number"
            },
            {
              "name": "IdPath",
              "type": "String"
            },
            {
              "name": "No",
              "type": "String"
            },
            {
              "name": "ProjectName",
              "type": "String"
            },
            {
              "name": "Domain_ID",
              "type": "Number"
            },
            {
              "name": "DomainName",
              "type": "String"
            },
            {
              "name": "Description",
              "type": "String"
            },
            {
              "name": "Customer_ID",
              "type": "Number"
            },
            {
              "name": "CustomerName",
              "type": "String"
            },
            {
              "name": "CompletedFinalAccount",
              "type": "Boolean"
            },
            {
              "name": "SearchColumn",
              "type": "String"
            }
          ]
        },
        {
          "name": "modelValue",
          "type": "String",
          "default": "null",
          "description": "",
          "required": false
        },
        {
          "name": "IncludeCompletedFinalAccount",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "required": false
        },
        {
          "name": "UseAlternativeButton",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "required": false
        },
        {
          "name": "Domain_ID",
          "type": "Number",
          "default": "null",
          "description": "",
          "required": false
        },
        {
          "name": "disableContextFilter",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "required": false
        },
        {
          "name": "disableInputMask",
          "type": "Boolean",
          "default": "false",
          "description": "Disabled Project No input mask",
          "required": false
        }
      ],
      "slots": [],
      "events": [],
      "params": [],
      "snippets": [
        {
          "title": "Example",
          "content": "For use outside of grid. Remove class when using inside DataGrid",
          "code": "<div class=\"row\"><{COMPONENT=11} class=\"col\" :title=\"$t('Project No')\"><{COMPONENT=40} validate :title=\"vProjectName\" :invalidFeedback=\"$t('You forgot to fill you this field!')\"><{COMPONENT} class=\"form-select\" v-model=\"vProjectNo\" :bind=\"sel=>{ vProject_ID = sel.ID; vProjectNo = sel.No; vProjectName = sel.ProjectName; }\" /></{COMPONENT=40}></{COMPONENT=11}></div>",
          "language": "html"
        }
      ]
    },
    {
      "id": 24,
      "name": "WarehousesLookup",
      "description": "",
      "type": "Component",
      "category": "WIN/Lookup",
      "path": "WIN365.vue.components.WarehousesLookup.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": ":bind",
          "type": "Row",
          "description": "Used to bind seleted values to your variables",
          "params": [
            {
              "name": "ID",
              "type": "Number"
            },
            {
              "name": "Name",
              "type": "String"
            }
          ]
        }
      ],
      "slots": [],
      "events": [],
      "params": [],
      "snippets": []
    },
    {
      "id": 25,
      "name": "QualificationsLookup",
      "description": "",
      "type": "Component",
      "category": "WIN/Lookup",
      "path": "WIN365.vue.components.QualificationsLookup.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": ":bind",
          "type": "Row",
          "description": "Used to bind seleted values to your variables",
          "params": [
            {
              "name": "ID",
              "type": "Number"
            },
            {
              "name": "No",
              "type": "Number"
            },
            {
              "name": "DescriptionNorwegian",
              "type": "String"
            },
            {
              "name": "DescriptionEnglish",
              "type": "String"
            }
          ]
        }
      ],
      "slots": [],
      "events": [],
      "params": [],
      "snippets": []
    },
    {
      "id": 26,
      "name": "DocumentsLookup",
      "description": "",
      "type": "Component",
      "category": "WIN/Lookup",
      "path": "WIN365.vue.components.DocumentsLookup.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": ":bind",
          "type": "Row",
          "description": "Used to bind seleted values to your variables",
          "params": [
            {
              "name": "ID",
              "type": "Number"
            },
            {
              "name": "Title",
              "type": "String"
            },
            {
              "name": "DocumentNo",
              "type": "String"
            },
            {
              "name": "CurrentRevision",
              "type": "String"
            },
            {
              "name": "DocumentType_ID",
              "type": "Number"
            },
            {
              "name": "DocumentGroup_ID",
              "type": "Number"
            },
            {
              "name": "SubProject_ID",
              "type": "Number"
            },
            {
              "name": "Order_ID",
              "type": "Number"
            },
            {
              "name": "Project_ID",
              "type": "Number"
            }
          ]
        }
      ],
      "slots": [],
      "events": [],
      "params": [],
      "snippets": []
    },
    {
      "id": 27,
      "name": "DocumentsRevisionsLookup",
      "description": "",
      "type": "Component",
      "category": "WIN/Lookup",
      "path": "WIN365.vue.components.DocumentsRevisionsLookup.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": "documentId",
          "type": "Number",
          "default": "0"
        },
        {
          "name": "documentRequired",
          "type": "Boolean",
          "default": "false"
        },
        {
          "name": ":bind",
          "type": "Row",
          "description": "Used to bind seleted values to your variables",
          "params": [
            {
              "name": "ID",
              "type": "Number"
            },
            {
              "name": "Revision",
              "type": "String"
            },
            {
              "name": "RevisionItemNo",
              "type": "Number"
            },
            {
              "name": "RevisionDate",
              "type": "String"
            },
            {
              "name": "Document_ID",
              "type": "Number"
            },
            {
              "name": "DocumentNo",
              "type": "Number"
            },
            {
              "name": "Step_ID",
              "type": "Number"
            },
            {
              "name": "Step",
              "type": "String"
            },
            {
              "name": "OrgUnit_ID",
              "type": "Number"
            }
          ]
        }
      ],
      "slots": [],
      "events": [],
      "params": [],
      "snippets": []
    },
    {
      "id": 28,
      "name": "DocumentsGroupsLookup",
      "description": "",
      "type": "Component",
      "category": "WIN/Lookup",
      "path": "WIN365.vue.components.DocumentsGroupsLookup.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": ":bind",
          "type": "Row",
          "description": "Used to bind seleted values to your variables",
          "params": [
            {
              "name": "ID",
              "type": "Number"
            },
            {
              "name": "No",
              "type": "String"
            },
            {
              "name": "Description",
              "type": "String"
            },
            {
              "name": "NoAndDescription",
              "type": "String"
            },
            {
              "name": "Domain_ID",
              "type": "Number"
            }
          ]
        }
      ],
      "slots": [],
      "events": [],
      "params": [],
      "snippets": []
    },
    {
      "id": 29,
      "name": "DocumentOriginatorsLookup",
      "description": "",
      "type": "Component",
      "category": "WIN/Lookup",
      "path": "WIN365.vue.components.DocumentOriginatorsLookup.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": ":bind",
          "type": "Row",
          "description": "Used to bind seleted values to your variables",
          "params": [
            {
              "name": "ID",
              "type": "Number"
            },
            {
              "name": "No",
              "type": "String"
            },
            {
              "name": "Description",
              "type": "String"
            },
            {
              "name": "NoAndDescription",
              "type": "String"
            },
            {
              "name": "CorporationName",
              "type": "String"
            },
            {
              "name": "Domain_ID",
              "type": "Number"
            }
          ]
        }
      ],
      "slots": [],
      "events": [],
      "params": [],
      "snippets": []
    },
    {
      "id": 30,
      "name": "DocumentStepsLookup",
      "description": "",
      "type": "Component",
      "category": "WIN/Lookup",
      "path": "WIN365.vue.components.DocumentsStepsLookup.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": ":bind",
          "type": "Row",
          "description": "Used to bind seleted values to your variables",
          "params": [
            {
              "name": "ID",
              "type": "Number"
            },
            {
              "name": "No",
              "type": "String"
            },
            {
              "name": "Description",
              "type": "String"
            },
            {
              "name": "NoAndDescription",
              "type": "String"
            },
            {
              "name": "HideFromList",
              "type": "Boolean"
            },
            {
              "name": "ShowInForDistribution",
              "type": "Boolean"
            },
            {
              "name": "Domain_ID",
              "type": "Number"
            }
          ]
        }
      ],
      "slots": [],
      "events": [],
      "params": [],
      "snippets": []
    },
    {
      "id": 31,
      "name": "DocumentTypesLookup",
      "description": "",
      "type": "Component",
      "category": "WIN/Lookup",
      "path": "WIN365.vue.components.DocumentsTypesLookup.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": "documentGroupId",
          "type": "Number",
          "default": "0",
          "description": "",
          "example": "",
          "required": false
        },
        {
          "name": "documentGroupRequired",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "example": "",
          "required": false
        },
        {
          "name": ":bind",
          "type": "Row",
          "description": "Used to bind seleted values to your variables",
          "params": [
            {
              "name": "ID",
              "type": "Number"
            },
            {
              "name": "No",
              "type": "String"
            },
            {
              "name": "Description",
              "type": "String"
            },
            {
              "name": "NoAndDescription",
              "type": "String"
            },
            {
              "name": "Domain_ID",
              "type": "Number"
            },
            {
              "name": "DocumentGroup_ID",
              "type": "Number"
            },
            {
              "name": "DocumentGroupDescription",
              "type": "String"
            },
            {
              "name": "NumberingScheme",
              "type": "String"
            }
          ]
        }
      ],
      "slots": [],
      "events": [],
      "params": [],
      "snippets": []
    },
    {
      "id": 32,
      "name": "DocumentTypesNumberingSchemesLookup",
      "description": "",
      "type": "Component",
      "category": "WIN/Lookup",
      "path": "WIN365.vue.components.DocumentTypesNumberingSchemesLookup.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": "documentTypeId",
          "type": "Number",
          "default": "0",
          "description": "",
          "required": false
        },
        {
          "name": "documentTypeRequired",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "required": false
        },
        {
          "name": ":bind",
          "type": "Row",
          "description": "Used to bind seleted values to your variables",
          "params": [
            {
              "name": "DocumentType_ID",
              "type": "Number"
            },
            {
              "name": "DocumentTypeNo",
              "type": "String"
            },
            {
              "name": "DocumentTypeDescription",
              "type": "String"
            },
            {
              "name": "DocumentTypeNoAndDescription",
              "type": "String"
            },
            {
              "name": "NumberingScheme_ID",
              "type": "Number"
            },
            {
              "name": "NumberingSchemeNo",
              "type": "String"
            },
            {
              "name": "Domain_ID",
              "type": "Number"
            }
          ]
        }
      ],
      "slots": [],
      "events": [],
      "params": [],
      "snippets": []
    },
    {
      "id": 33,
      "name": "DocumentsWestconAreaLookup",
      "description": "",
      "type": "Component",
      "category": "WIN/Lookup",
      "path": "WIN365.vue.components.DocumentsWestconAreaLookup.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": ":bind",
          "type": "Row",
          "description": "Used to bind seleted values to your variables",
          "params": [
            {
              "name": "ID",
              "type": "Number"
            },
            {
              "name": "No",
              "type": "String"
            },
            {
              "name": "Description",
              "type": "String"
            },
            {
              "name": "NoAndDescription",
              "type": "String"
            },
            {
              "name": "Domain_ID",
              "type": "Number"
            }
          ]
        }
      ],
      "slots": [],
      "events": [],
      "params": [],
      "snippets": []
    },
    {
      "id": 34,
      "name": "RevisionDistributionStatusesLookup",
      "description": "",
      "type": "Component",
      "category": "WIN/Lookup",
      "path": "WIN365.vue.components.RevisionDistributionStatusesLookup.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": ":bind",
          "type": "Row",
          "description": "Used to bind seleted values to your variables",
          "params": [
            {
              "name": "ID",
              "type": "Number"
            },
            {
              "name": "No",
              "type": "String"
            },
            {
              "name": "Domain_ID",
              "type": "Number"
            }
          ]
        }
      ],
      "slots": [],
      "events": [],
      "params": [],
      "snippets": []
    },
    {
      "id": 35,
      "name": "RevisionSendActionTypesLookup",
      "description": "",
      "type": "Component",
      "category": "WIN/Lookup",
      "path": "WIN365.vue.components.RevisionSendActionTypesLookup.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": ":bind",
          "type": "Row",
          "description": "Used to bind seleted values to your variables",
          "params": [
            {
              "name": "ID",
              "type": "Number"
            },
            {
              "name": "No",
              "type": "String"
            },
            {
              "name": "Description",
              "type": "String"
            },
            {
              "name": "NoAndDescription",
              "type": "String"
            },
            {
              "name": "IsInternalReview",
              "type": "Boolean"
            }
          ]
        }
      ],
      "slots": [],
      "events": [],
      "params": [],
      "snippets": [
        {
          "title": "Example",
          "content": "For use outside of grid. Remove class when using inside DataGrid",
          "code": "<div class=\"row\"><{COMPONENT=11} class=\"col\" :title=\"$t('Action Type')\"><{COMPONENT} class=\"form-select\" v-model=\"vActionTypeDescription\" :bind=\"sel=>{ vActionType_ID = sel.ID; vActionTypeDescription = sel.Description; }\" /></{COMPONENT=11}></div>",
          "language": "html"
        }
      ]
    },
    {
      "id": 36,
      "name": "LocationsLookup",
      "description": "",
      "type": "Component",
      "category": "WIN/Lookup",
      "path": "WIN365.vue.components.LocationsLookup.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": "OnlyShowPersonnelLocations",
          "type": "Boolean",
          "default": "false",
          "description": "Will only show locations that Personnel can be placed in"
        }
      ],
      "slots": [],
      "events": [],
      "params": [],
      "snippets": [
        {
          "title": "Example",
          "content": "For use outside of grid. Remove class when using inside DataGrid",
          "code": "<div class=\"row\"><{COMPONENT=11} class=\"col\" :title=\"$t('Location')\"><{COMPONENT} class=\"form-select\" v-model=\"vLocationName\" :bind=\"sel=>{ vLocation_ID = sel.ID; vLocationName = sel.Name; }\" /></{COMPONENT=11}></div>",
          "language": "html"
        }
      ]
    },
    {
      "id": 37,
      "name": "PersonsLookup",
      "description": "",
      "type": "Component",
      "category": "WIN/Lookup",
      "path": "WIN365.vue.components.PersonsLookup.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": "includeAllPersons",
          "type": "Boolean",
          "default": "false",
          "description": "Includes all persons, even external persons",
          "required": false
        },
        {
          "name": "includeInactivePersons",
          "type": "Boolean",
          "default": "false",
          "description": "Includes inactive persons",
          "required": false
        },
        {
          "name": "showAsButton",
          "type": "Boolean",
          "default": "false",
          "description": "Will render button instead of input",
          "required": false
        },
        {
          "name": "buttonIconClassName",
          "type": "String",
          "default": "null",
          "description": "Icon class names. Required prop: showAsButton",
          "required": false
        },
        {
          "name": "buttonClassName",
          "type": "String",
          "default": "null",
          "description": "Class names for button. Required prop: showAsButton",
          "required": false
        },
        {
          "name": "Company_ID",
          "type": "Number",
          "default": "null",
          "description": "Filters on Company ID",
          "required": false
        },
        {
          "name": "includeCompanyInfo",
          "type": "Boolean",
          "default": "false",
          "description": "Includes company info",
          "required": false
        }
      ],
      "slots": [],
      "events": [],
      "params": [],
      "snippets": [
        {
          "title": "Example",
          "content": "For use outside of grid. Remove class when using inside DataGrid",
          "code": "<div class=\"row\"><{COMPONENT=11} class=\"col\" :title=\"$t('Person')\"><{COMPONENT} class=\"form-select\" v-model=\"vPersonName\" :bind=\"sel=>{ vPerson_ID = sel.ID; vPersonName = sel.Name; }\" /></{COMPONENT=11}></div>",
          "language": "html"
        }
      ]
    },
    {
      "id": 38,
      "name": "BranchesLookup",
      "description": "",
      "type": "Component",
      "category": "WIN/Lookup",
      "path": "WIN365.vue.components.BranchesLookup.vue",
      "pathtype": "Direct",
      "props": [],
      "slots": [],
      "events": [],
      "params": [],
      "snippets": [
        {
          "title": "Example",
          "content": "For use outside of grid. Remove class when using inside DataGrid",
          "code": "<div class=\"row\"><{COMPONENT=11} class=\"col\"><{COMPONENT=40} validate :title=\"vBranchNo\" :invalidFeedback=\"$t('You forgot to fill you this field!')\"><{COMPONENT} class=\"form-select\" v-model=\"vBranchName\" :bind=\"sel=>{ vBranchNo = sel.No; vBranch_ID = sel.ID; vBranchName = sel.Name; }\" /></{COMPONENT=40}></{COMPONENT=11}></div>",
          "language": "html"
        }
      ]
    },
    {
      "id": 39,
      "name": "SubProjectsLookup",
      "description": "",
      "type": "Component",
      "category": "WIN/Lookup",
      "path": "WIN365.vue.components.SubProjectsLookup.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": ":bind",
          "type": "Row",
          "default": "null",
          "description": "Used to bind seleted values to your variables",
          "params": [
            {
              "name": "CompletedFinalAccount",
              "type": "Boolean"
            },
            {
              "name": "Domain",
              "type": "String"
            },
            {
              "name": "Domain_ID",
              "type": "Number"
            },
            {
              "name": "ID",
              "type": "Number"
            },
            {
              "name": "OrgUnitIdPath",
              "type": "String"
            },
            {
              "name": "ProjectName",
              "type": "String"
            },
            {
              "name": "ProjectNo",
              "type": "Number"
            },
            {
              "name": "Project_ID",
              "type": "Number"
            },
            {
              "name": "SearchColumn",
              "type": "String"
            },
            {
              "name": "SubProjectName",
              "type": "String"
            },
            {
              "name": "SubProjectNo",
              "type": "String"
            }
          ],
          "required": false
        },
        {
          "name": "Project_ID",
          "type": "Number",
          "default": "null",
          "description": "Filter on Project_ID (If you specify this dont specify Domain_ID)",
          "required": false
        },
        {
          "name": "Domain_ID",
          "type": "Number",
          "default": "null",
          "description": "Filter on Domain_ID (Same as above)",
          "required": false
        },
        {
          "name": "showAsButton",
          "type": "Boolean",
          "default": "false",
          "description": "Will render button instead of input",
          "required": false
        },
        {
          "name": "focusInput",
          "type": "Boolean",
          "default": "false",
          "description": "Will focus input",
          "required": false
        },
        {
          "name": "buttonIconClassName",
          "type": "String | CSS classes",
          "default": "null",
          "description": "Icon class names. Required prop: showAsButton",
          "required": false
        },
        {
          "name": "buttonClassName",
          "type": "String | CSS classes",
          "default": "null",
          "description": "Class names for button. Required prop: showAsButton",
          "required": false
        },
        {
          "name": "disableContextFilter",
          "type": "Boolean",
          "default": "false",
          "description": "Causes enableContextFilter to never be enabled",
          "required": false
        },
        {
          "name": "disableInputMask",
          "type": "Boolean",
          "default": "false",
          "description": "Disables masking for the InputMask component, fallback to normal input",
          "required": false
        },
        {
          "name": "includeDomainField",
          "type": "Boolean",
          "default": "false",
          "description": "Includes domain field",
          "required": false
        },
        {
          "name": "IncludeCompletedFinalAccount",
          "type": "Boolean",
          "default": "false",
          "description": "Includes Completed Final Accounts",
          "required": false
        }
      ],
      "slots": [],
      "events": [
        {
          "name": "maskCompleted",
          "description": "Emits matching row on SubProjectNo when mask is completed from manually typing SubProjectNo.",
          "syntax": "@maskCompleted=\"sel=>{}\""
        }
      ],
      "params": [],
      "snippets": [
        {
          "title": "Example",
          "content": "For use outside of grid. Remove class when using inside DataGrid",
          "code": "<div class=\"row\"><{COMPONENT=11} class=\"col\"><{COMPONENT=40} validate :title=\"vSubProjectNo\" invalidFeedback=\"You forgot to fill you this field!\"><{COMPONENT} class=\"form-select\" v-model=\"vSubProjectName\" :bind=\"sel=>{ vSubProjectNo = sel.SubProjectNo; vSubProject_ID = sel.ID; vSubProjectName = sel.SubProjectName; }\" /></{COMPONENT=40}></{COMPONENT=11}></div>",
          "language": "html"
        }
      ]
    },
    {
      "id": 40,
      "name": "InputGroup",
      "description": "Input group for Westcon",
      "type": "Component",
      "category": "WIN/Form",
      "path": "WIN365.vue.components.FormInputGroup.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": "title",
          "type": "String",
          "default": "null",
          "description": "Text to the left of input",
          "required": false
        },
        {
          "name": "icon",
          "type": "String",
          "default": "null",
          "description": "Bootstrap icon class",
          "example": "icon=\"bi-person-fill\"",
          "required": false
        },
        {
          "name": "append",
          "type": "Boolean",
          "default": "false",
          "description": "Include this prop if you want to append add-on instead of prepend",
          "required": false
        },
        {
          "name": "validate",
          "type": "Boolean",
          "default": "false",
          "description": "Adds validation support.",
          "required": false
        },
        {
          "name": "invalidFeedback",
          "type": "String",
          "default": "Please fill inn",
          "description": "Message that is displayed if input fails validation",
          "required": false
        }
      ],
      "slots": [],
      "events": [],
      "params": [],
      "snippets": [
        {
          "title": "Example",
          "content": "",
          "code": "<div class=\"row\"><{COMPONENT=11} class=\"col\" :title=\"$t('No')\"><{COMPONENT} validate :title=\"vSomeNo\" :invalidFeedback=\"$t('You forgot to fill you this field!')\"></{COMPONENT}></{COMPONENT=11}></div>",
          "language": "html"
        }
      ]
    },
    {
      "id": 41,
      "name": "Tabs",
      "description": "",
      "type": "Component",
      "category": "Tabs",
      "path": "o365.vue.components.Tabs.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": "tabsClass",
          "type": "String | CSS classes",
          "default": "nav nav-tabs",
          "description": "",
          "required": false
        },
        {
          "name": "tabsStyle",
          "type": "String",
          "default": "null",
          "description": "",
          "required": false
        },
        {
          "name": "tabContentClass",
          "type": "String",
          "default": "null",
          "description": "",
          "required": false
        },
        {
          "name": "tabContentStyle",
          "type": "String",
          "default": "null",
          "description": "",
          "required": false
        },
        {
          "name": "hideNavbar",
          "type": "Boolean",
          "default": "false",
          "description": "Hides navbar?",
          "required": false
        },
        {
          "name": "persistentKey",
          "type": "String",
          "default": "null",
          "description": "",
          "required": false
        },
        {
          "name": "enableCompactView",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "required": false
        },
        {
          "name": "enableUrlFilter",
          "type": "Boolean",
          "default": "false",
          "description": "Enables for URL filtering",
          "required": false
        },
        {
          "name": "id",
          "type": "String",
          "default": "null",
          "description": "",
          "required": false
        },
        {
          "name": "compactViewMode",
          "type": "String",
          "default": "accordion",
          "description": "can be accordion or cards",
          "required": false
        }
      ],
      "exposes": [
        {
          "name": "setActiveTab",
          "description": "Lets you set the active tab by passing the id of the tab you want to switch to. In such case you need to add ids on the <{COMPONENT=42}> components.",
          "type": "Function"
        },
        {
          "name": "getActiveTab",
          "type": "Function"
        },
        {
          "name": "sm",
          "type": "Boolean"
        },
        {
          "name": "md",
          "type": "Boolean"
        },
        {
          "name": "lg",
          "type": "Boolean"
        }
      ],
      "slots": [
        {
          "name": "default",
          "description": "Slot for {COMPONENT=42}'s",
          "template": "#default"
        },
        {
          "name": "beforeNav",
          "description": "",
          "template": "#beforeNav"
        },
        {
          "name": "afterNav",
          "description": "",
          "template": "#afterNav"
        }
      ],
      "events": [
        {
          "name": "onHide",
          "description": "",
          "syntax": "@onHide=\"\""
        },
        {
          "name": "onHidden",
          "description": "",
          "syntax": "@onHidden=\"\""
        },
        {
          "name": "onShow",
          "description": "",
          "syntax": "@onShow=\"\""
        },
        {
          "name": "onShown",
          "description": "",
          "syntax": "@onShown=\"\""
        }
      ],
      "params": [],
      "snippets": [
        {
          "title": "Example",
          "content": "",
          "code": "<{COMPONENT}><{COMPONENT=42} :title=\"$t('Tab 1')\" active>Tab 1 Content</{COMPONENT=42}><{COMPONENT=42}><template #title><i class=\"bi bi-bookmark\"></i> {{$t('Tab 2')}}</template>Tab 2 Content</{COMPONENT=42}></{COMPONENT}>",
          "language": "html"
        },
        {
          "title": "Tabs with Url",
          "content": "TBA",
          "code": "",
          "language": "html"
        }
      ]
    },
    {
      "id": 42,
      "name": "Tab",
      "description": "",
      "type": "Component",
      "category": "Tabs",
      "path": "o365.vue.components.Tab.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": "id",
          "type": "Number | String",
          "default": "null",
          "description": "Will be used as id for the tab-content element",
          "required": false
        },
        {
          "name": "title",
          "type": "String",
          "default": "null",
          "description": "Title of tab",
          "required": false
        },
        {
          "name": "tabIndex",
          "type": "Number",
          "default": "1",
          "description": "Index of tab",
          "required": false
        },
        {
          "name": "active",
          "type": "Boolean",
          "default": "false",
          "description": "Sets initially active tab.",
          "required": true
        },
        {
          "name": "linkClass",
          "type": "String | CSS classes",
          "default": "null",
          "description": "Classes for tablink",
          "required": false
        },
        {
          "name": "linkStyle",
          "type": "String",
          "default": "null",
          "description": "Sets the style of the tab link",
          "required": false
        },
        {
          "name": "paneClass",
          "type": "String | CSS classes",
          "default": "null",
          "description": "Classes for pane",
          "required": false
        },
        {
          "name": "paneStyle",
          "type": "String",
          "default": "null",
          "description": "Sets the style of the pane",
          "required": false
        },
        {
          "name": "itemClass",
          "type": "String | CSS classes",
          "default": "null",
          "description": "Classes for item",
          "required": false
        },
        {
          "name": "itemStyle",
          "type": "String",
          "default": "null",
          "description": "Sets the style of the item",
          "required": false
        },
        {
          "name": "tabHeight",
          "type": "Number",
          "default": "null",
          "description": "Height of tab",
          "required": false
        },
        {
          "name": "alwaysRender",
          "type": "Boolean",
          "default": "false",
          "description": "Will always render tab",
          "required": false
        },
        {
          "name": "disableKeepAlive",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "required": false
        }
      ],
      "slots": [
        {
          "name": "default",
          "description": "Panel content for this tab.",
          "template": "#default"
        },
        {
          "name": "title",
          "description": "Title of tab",
          "template": "#title"
        }
      ],
      "exposes": [],
      "events": [],
      "params": [],
      "snippets": []
    },
    {
      "id": 43,
      "name": "SizerPanel",
      "description": "",
      "type": "Component",
      "category": "Sizer",
      "path": "o365.vue.components.SizerPanel.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": "width",
          "type": "String",
          "default": "null",
          "description": "",
          "required": false
        },
        {
          "name": "height",
          "type": "String",
          "default": "null",
          "description": "",
          "required": false
        },
        {
          "name": "collapse",
          "type": "String",
          "default": "undefined",
          "description": "",
          "required": false
        },
        {
          "name": "expand",
          "type": "String",
          "default": "undefined",
          "description": "",
          "required": false
        },
        {
          "name": "noContainerClass",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "required": false
        },
        {
          "name": "hideIcons",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "required": false
        },
        {
          "name": "useEvents",
          "type": "Boolean",
          "default": "false",
          "description": "Enable EventEmitter on the Sizer control for Resized and Resizing events",
          "required": false
        },
        {
          "name": "initiallyCollapsed",
          "type": "Boolean",
          "default": "false",
          "description": "Set the panel as collapsed initially (must have collapse prop)",
          "required": false
        },
        {
          "name": "initiallyExpanded",
          "type": "Boolean",
          "default": "false",
          "description": "Set the panel as expanded initially (must have expand prop)",
          "required": false
        },
        {
          "name": "minWidth",
          "type": "String",
          "default": "null",
          "description": "Sets the min width of the sizer panel. Value can be either in pixels or percentage. Ex: \"600px\" or \"20%\"",
          "required": false
        },
        {
          "name": "minHeight",
          "type": "String",
          "default": "null",
          "description": "Sets the min height of the sizer panel. Value can be either in pixels or percentage. Ex: \"600px\" or \"20%\"",
          "required": false
        },
        {
          "name": "maxWidth",
          "type": "String",
          "default": "null",
          "description": "Sets the max width of the sizer panel. Value can be either in pixels or percentage. Ex: \"600px\" or \"20%\"",
          "required": false
        },
        {
          "name": "maxHeight",
          "type": "String",
          "default": "null",
          "description": "Sets the max height of the sizer panel. Value can be either in pixels or percentage. Ex: \"600px\" or \"20%\"",
          "required": false
        },
        {
          "name": "collapseAt",
          "type": "String",
          "default": "null",
          "description": "Auto collapse when viewport is smaller than this value",
          "required": false
        }
      ],
      "slots": [],
      "events": [
        {
          "name": "collapsed",
          "description": "Fires when sizer is collapsed",
          "syntax": "@collapsed=\"\""
        }
      ],
      "params": [],
      "snippets": [
        {
          "title": "Horizontal Example",
          "content": "",
          "code": "<{COMPONENT=45} appContainer><{COMPONENT=44}></{COMPONENT=44}><{COMPONENT} width=\"400px\" expand collapse ref=\"vSizerPanel\"></{COMPONENT}></{COMPONENT=45}>",
          "language": "html"
        },
        {
          "title": "Vertical Example",
          "content": "",
          "code": "<{COMPONENT=44} appContainer><{COMPONENT=45}></{COMPONENT=45}><{COMPONENT} height=\"400px\" expand collapse ref=\"vSizerPanel\"></{COMPONENT}></{COMPONENT=44}>",
          "language": "html"
        }
      ],
      "exposes": [
        {
          "name": "getSizer",
          "type": "Function"
        },
        {
          "name": "sizerPanel",
          "type": "Node"
        }
      ]
    },
    {
      "id": 44,
      "name": "RowContainer",
      "description": "For content positioned in flex-direction:column",
      "type": "Component",
      "category": "Container",
      "path": "o365.vue.components.RowContainer.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": "desktop",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "required": false
        },
        {
          "name": "appContainer",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "required": false
        },
        {
          "name": "noToolbar",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "required": false
        }
      ],
      "slots": [],
      "events": [],
      "params": [],
      "snippets": []
    },
    {
      "id": 45,
      "name": "ColContainer",
      "description": "For content positioned in flex-direction:row",
      "type": "Component",
      "category": "Container",
      "path": "o365.vue.components.ColContainer.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": "desktop",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "required": false
        },
        {
          "name": "appContainer",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "required": false
        },
        {
          "name": "noToolbar",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "required": false
        }
      ],
      "slots": [],
      "events": [],
      "params": [],
      "snippets": []
    },
    {
      "id": 46,
      "name": "CardView",
      "description": "Mobile alternative to grid. Uses Card component",
      "type": "Component",
      "category": "Card",
      "path": "o365.vue.components.CardView.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": "dataObject",
          "type": "DataObject",
          "default": "null",
          "description": "",
          "required": false
        },
        {
          "name": "linkParams",
          "type": "Object",
          "default": "null",
          "description": "",
          "required": false
        },
        {
          "name": "columns",
          "type": "Array",
          "default": "null",
          "description": "",
          "required": false
        },
        {
          "name": "headerColumns",
          "type": "Array",
          "default": "null",
          "description": "",
          "required": false
        },
        {
          "name": "cardMinWidth",
          "type": "String",
          "default": "20rem",
          "description": "",
          "required": false
        },
        {
          "name": "cardGap",
          "type": "String",
          "default": "30px",
          "description": "gap between cards",
          "required": false
        },
        {
          "name": "imagesView",
          "type": "String",
          "default": "null",
          "description": "",
          "required": false
        },
        {
          "name": "imagesPrimKeyColumnName",
          "type": "String",
          "default": "null",
          "description": "",
          "required": false
        },
        {
          "name": "noInfoAction",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "required": false
        },
        {
          "name": "noFilter",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "required": false
        },
        {
          "name": "noSort",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "required": false
        },
        {
          "name": "noSearch",
          "type": "Boolean",
          "default": "false",
          "description": "Disables search",
          "required": false
        },
        {
          "name": "noAutoLoad",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "required": false
        },
        {
          "name": "useSearchColumn",
          "type": "Boolean",
          "default": "true",
          "description": "Used search column for searching",
          "required": false
        },
        {
          "name": "fixedHeightCards",
          "type": "Boolean",
          "default": "true",
          "description": "",
          "required": false
        },
        {
          "name": "multiselect",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "required": false
        },
        {
          "name": "searchMask",
          "type": "String",
          "default": "null",
          "description": "",
          "required": false
        },
        {
          "name": "enableAddNew",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "required": false
        },
        {
          "name": "searchMaskPlaceholder",
          "type": "String",
          "default": "null",
          "description": "Placeholder for search field",
          "required": false
        },
        {
          "name": "highlightCurrentRow",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "required": false
        },
        {
          "name": "imageUrlParameters",
          "type": "String",
          "default": "mwidth=100",
          "description": "",
          "required": false
        },
        {
          "name": "getItemCategory",
          "type": "Function",
          "default": "",
          "description": "",
          "required": false
        },
        {
          "name": "rowClass",
          "type": "Function",
          "default": "null",
          "description": "Passes current row as parameter. return string",
          "required": false
        }
      ],
      "slots": [
        {
          "name": "customSearchControls",
          "description": "Custom controls for Search",
          "template": "#customSearchControls"
        },
        {
          "name": "fallbackImage",
          "description": "",
          "template": "#fallbackImage"
        },
        {
          "name": "actions",
          "description": "Rendered in header",
          "template": "#actions"
        },
        {
          "name": "footer",
          "description": "Card Footer",
          "template": "#footer"
        },
        {
          "name": "default",
          "description": "",
          "template": "#default"
        },
        {
          "name": "header",
          "description": "",
          "template": "#header"
        }
      ],
      "events": [
        {
          "name": "setCurrentItem",
          "description": "Set current item",
          "syntax": "@setCurrentItem=\"\""
        },
        {
          "name": "onCreateNew",
          "description": "Fires when new row is created",
          "syntax": "@onCreateNew=\"\""
        }
      ],
      "params": [],
      "snippets": []
    },
    {
      "id": 47,
      "name": "TextArea",
      "description": "",
      "type": "Component",
      "category": "Form",
      "path": "o365.vue.components.TextArea.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": "autoGrow",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "example": "",
          "required": false
        },
        {
          "name": "noResize",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "example": "",
          "required": false
        },
        {
          "name": "noEdit",
          "type": "Boolean",
          "default": "false",
          "description": "Same as readonly",
          "example": "",
          "required": false
        },
        {
          "name": "rowHeight",
          "type": "Number | String",
          "default": "28",
          "description": "",
          "example": "",
          "required": false
        },
        {
          "name": "rows",
          "type": "Number | String",
          "default": "2",
          "description": "",
          "example": "",
          "required": false
        },
        {
          "name": "modalValue",
          "type": "Number | String",
          "default": "null",
          "description": "",
          "example": "",
          "required": false
        }
      ],
      "slots": [],
      "events": [
        {
          "name": "update",
          "description": "",
          "syntax": "@update:modelValue=\"\""
        }
      ],
      "params": [],
      "exposes": [
        {
          "name": "activateEditor",
          "type": "Boolean"
        },
        {
          "name": "getControl",
          "type": "Function"
        },
        {
          "name": "calculateInputHeight",
          "type": "Function"
        }
      ],
      "snippets": []
    },
    {
      "id": 48,
      "name": "DatePicker",
      "description": "Date Picker",
      "type": "Component",
      "category": "Form",
      "path": "o365.vue.components.DatePicker.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": "modelValue",
          "type": "any",
          "default": "null",
          "description": "",
          "required": false
        },
        {
          "name": "date",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "required": false
        },
        {
          "name": "column",
          "type": "DataColumn",
          "default": "null",
          "description": "",
          "required": false
        },
        {
          "name": "format",
          "type": "String | Function",
          "default": "",
          "example": "(pDate: Date) => string",
          "description": "",
          "required": false
        },
        {
          "name": "timepicker",
          "type": "Boolean",
          "default": "false",
          "description": "Toggles timepicker",
          "required": false
        },
        {
          "name": "timepickerOnly",
          "type": "Boolean",
          "default": "false",
          "description": "Shows only timepicker",
          "required": false
        },
        {
          "name": "callback",
          "type": "Function",
          "default": "null",
          "description": "",
          "required": false
        },
        {
          "name": "clearable",
          "type": "Boolean",
          "default": "true",
          "description": "",
          "required": false
        },
        {
          "name": "clearableFromPicker",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "required": false
        },
        {
          "name": "openOnIconClick",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "required": false
        },
        {
          "name": "autoSuggestion",
          "type": "Boolean",
          "default": "true",
          "description": "suggests date?",
          "required": false
        },
        {
          "name": "showInputIcon",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "required": false
        },
        {
          "name": "teleport",
          "type": "Boolean",
          "default": "true",
          "description": "Throws an ender pearl. Just kidding. When true datepicker will be rendered inside input element.",
          "required": false
        },
        {
          "name": "containerClass",
          "type": "String | CSS classes",
          "default": "null",
          "description": "Classes for Input field",
          "required": false
        },
        {
          "name": "range",
          "type": "Boolean",
          "default": "false",
          "description": "Enables for 'from'/'to' date selection",
          "required": false
        },
        {
          "name": "utc",
          "type": "Boolean",
          "default": "false",
          "description": "Toggles UTC date",
          "required": false
        },
        {
          "name": "inputClassName",
          "type": "String | CSS classes",
          "default": "null",
          "description": "",
          "required": false
        },
        {
          "name": "inputStyle",
          "type": "String",
          "default": "null",
          "description": "",
          "required": false
        }
      ],
      "slots": [],
      "events": [
        {
          "name": "update:modelValue",
          "description": "fires then modelValue has changed.",
          "syntax": "@update:modelValue=\"\""
        }
      ],
      "params": [],
      "exposes": [
        {
          "name": "open",
          "type": "Boolean"
        },
        {
          "name": "setDate",
          "type": "Function"
        },
        {
          "name": "format",
          "type": "String"
        },
        {
          "name": "uiLocale",
          "type": "String"
        },
        {
          "name": "datepickerRef",
          "type": "Ref"
        },
        {
          "name": "textInputOptions",
          "type": "Object",
          "params": [
            {
              "name": "openMenu",
              "type": "Boolean"
            }
          ]
        },
        {
          "name": "openMenu",
          "type": "Function"
        },
        {
          "name": "hideInputIcon",
          "type": "Boolean"
        },
        {
          "name": "activateEditor",
          "type": "Function"
        }
      ],
      "snippets": [
        {
          "title": "Example",
          "content": "",
          "code": "<{COMPONENT} v-model=\"dsYourDataSource.current.Date\" format=\"dd/MM/yyyy\" class=\"form-control\" />",
          "language": "html"
        }
      ]
    },
    {
      "id": 49,
      "name": "MatchMedia",
      "description": "",
      "type": "Component",
      "category": "Other",
      "path": "o365.vue.components.MatchMedia.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": "query",
          "type": "String",
          "default": "MediaQueryProvider",
          "description": "Media query string to match against.",
          "required": false
        }
      ],
      "slots": [],
      "events": [
        {
          "name": "change",
          "description": "Emitted when the media query status changes",
          "syntax": "@change=\"\""
        }
      ],
      "params": [],
      "exposes": [],
      "snippets": []
    },
    {
      "id": 50,
      "name": "Draggable",
      "description": "",
      "type": "Directive",
      "category": "Directive",
      "path": "o365.vue.directive.draggable.ts",
      "pathtype": "Direct",
      "props": [],
      "slots": [],
      "events": [],
      "params": [],
      "exposes": [],
      "snippets": [
        {
          "title": "Example",
          "content": "",
          "code": "<script setup>\nimport { ref } from 'vue';\nimport {COMPONENT} from 'o365.vue.directive.draggable.ts';\n\nconst draggableOptions = ref({\n\t// handle\n\tonPositionChange: onPositionChange\n\t// onDragEnd\n\t// onDragStart\n\t// resetInitialPos\n\t// initialPosition\n\t// stopDragging\n\t// boundingRect\n\t// boundingElement\n\t// boundingRectMargin\n});\n\nfunction onPositionChange(positionDiff, absolutePosition, event) {\nconsole.log(\"left corner\", absolutePosition.left);\nconsole.log(\"top corner\", absolutePosition.top);\n}\n</script><template><div class=\"modal\" v-draggable=\"draggableOptions\"></div></template>",
          "language": "html"
        }
      ]
    },
    {
      "id": 51,
      "name": "Footer",
      "description": "Contain ActionSave and ActionCancel buttons",
      "type": "Component",
      "category": "WIN/Form",
      "path": "WIN365.vue.components.Footer.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": "dataObject",
          "type": "Object",
          "default": "undefined",
          "description": "Data Object belonging to the form",
          "required": false
        }
      ],
      "slots": [
        {
          "name": "prepend",
          "description": "Add items before the buttons",
          "template": "#prepend"
        },
        {
          "name": "default",
          "description": "Add items after the buttons",
          "template": "#default"
        }
      ],
      "events": [],
      "params": [],
      "exposes": [],
      "snippets": [
        {
          "title": "Example",
          "content": "",
          "code": "<{COMPONENT} :dataObject=\"dsWorkflows\" />",
          "language": "html"
        }
      ]
    },
    {
      "id": 52,
      "name": "DataTable",
      "description": "Mostly same as {COMPONENT=4}, but new records are created in R4 style 😎",
      "type": "Component",
      "category": "Grid",
      "path": "o365.vue.components.DataTable.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": "dataObject",
          "type": "DataObject",
          "default": "null",
          "description": "The data object used in the grid",
          "required": false
        },
        {
          "name": "columns",
          "type": "Array",
          "default": "null",
          "description": "Columns passed as an array instead of slots",
          "required": false
        },
        {
          "name": "data",
          "type": "Array",
          "default": "null",
          "description": "",
          "required": false
        },
        {
          "name": "rowClass",
          "type": "[Function, Object, String]",
          "default": "null",
          "description": "String, dynamic class object or function that will be bound to the row class property. The current row is provided to the function as an argument.",
          "required": false
        },
        {
          "name": "rowStyle",
          "type": "[Function, Object, String]",
          "default": "null",
          "description": "String, dynamic class object or function that will be bound to the row class property. The current row is provided to the function as an argument.",
          "required": false
        },
        {
          "name": "headerTitle",
          "type": "String",
          "default": "null",
          "description": "",
          "required": false
        },
        {
          "name": "menuTabs",
          "type": "Record<String, any>[]",
          "default": "null",
          "description": "An array of custom tab definitions for the grid sidemenu details tab.",
          "required": false
        },
        {
          "name": "rowclickhandler",
          "type": "Function",
          "default": "null",
          "description": "Override the row click handler, when provided will not set current index",
          "required": false
        },
        {
          "name": "noHeader",
          "type": "Boolean",
          "default": "false",
          "description": "When set to `true` will not render header.",
          "required": false
        },
        {
          "name": "noHeaderRow",
          "type": "Boolean",
          "default": "false",
          "description": "When set to `true` will not render header row, but will still render the header container.",
          "required": false
        },
        {
          "name": "noFooter",
          "type": "Boolean",
          "default": "false",
          "description": "When set to `true` will not render footer.",
          "required": false
        },
        {
          "name": "disableFilterRow",
          "type": "Boolean",
          "default": "false",
          "description": "When set to `true` will not render filter row.",
          "required": false
        },
        {
          "name": "detailIframe",
          "type": "String",
          "default": "null",
          "description": "Path for detail iframe",
          "example": ":detailIframe=\"`/nt/your_app_here?ID=${ID_TO_CHILD}&HideNav=true&Context=${dsYourDataSource.current.Domain_ID}`\"",
          "required": false
        },
        {
          "name": "detailTabTitle",
          "type": "String",
          "default": "null",
          "description": "The label used on the detail iframe tab",
          "required": false
        },
        {
          "name": "multilineHeader",
          "type": "Boolean",
          "default": "false",
          "description": "Enables word wrapping for header columns",
          "required": false
        },
        {
          "name": "importData",
          "type": "Boolean",
          "default": "false",
          "description": "When true, will show importData",
          "required": false
        },
        {
          "name": "initialMenuWidth",
          "type": "String",
          "default": "400px",
          "description": "Sets the initial width of the grid menu, accepts values either in 'px' or '%' ",
          "required": false
        },
        {
          "name": "groupByFolders",
          "type": "Boolean",
          "default": "false",
          "description": "Adds group by folders selector into right panel",
          "required": false
        },
        {
          "name": "dynamicLoading",
          "type": "Boolean",
          "default": "true",
          "description": "Enables dynamic loading for the grid. When set to false will set the inner height to loaded data length.",
          "required": false
        },
        {
          "name": "disableNavigation",
          "type": "Boolean",
          "default": "false",
          "description": "When set to `true` will disable grid navigation features.",
          "required": false
        },
        {
          "name": "collapseGridMenu",
          "type": "Boolean",
          "default": "false",
          "description": "When set to `true` the grid setup menu will be initially collapsed.",
          "required": false
        },
        {
          "name": "newRecordsPosition",
          "type": "Boolean",
          "default": "above-filters",
          "description": "Position where new records are rendered.",
          "required": false
        },
        {
          "name": "disableSelectAll",
          "type": "Boolean",
          "default": "false",
          "description": "When set to `true` the select all checkbox will not render",
          "required": false
        },
        {
          "name": "hideGridMenu",
          "type": "Boolean",
          "default": "false",
          "description": "When set to `true` will not render the grid setup menu.",
          "required": false
        },
        {
          "name": "fieldFilters",
          "type": "Array",
          "default": "null",
          "description": "An array of initial field filters. For example `['Title', {name:'StatusCode', distinct:'StatusCode'}]`",
          "required": false
        },
        {
          "name": "disableDeleteConfirm",
          "type": "Boolean",
          "default": "false",
          "description": "When true will disable confirm dialog on delete actions in grid.",
          "required": false
        },
        {
          "name": "noRowsFound",
          "type": "String | Boolean",
          "default": "No rows found...",
          "description": "Then set to true, will show default message and enable for custom overriding via 'noRowsFound' slot. Can also be used to override default message.",
          "required": false
        },
        {
          "name": "eagerGridControl",
          "type": "Function",
          "default": "null",
          "description": "Returns grid control ref immediately after creation",
          "required": false
        },
        {
          "name": "onDemandFields",
          "type": "Boolean",
          "default": "false",
          "description": "Select list will contain only visible grid columns and sort order columns set on data object",
          "required": false
        },
        {
          "name": "loadDataObject",
          "type": "Boolean",
          "default": "false",
          "description": "When set to true the grid will load the dataobject after mount",
          "required": false
        },
        {
          "name": "softDelete",
          "type": "Boolean",
          "default": "",
          "description": "Use soft delete for ActionDelete in grid",
          "required": false
        },
        {
          "name": "autoFilterDebounce",
          "type": "Number",
          "default": "500",
          "description": "If provided will filter automaticly when typing in filter cells with the debounce value.",
          "required": false
        },
        {
          "name": "noGroupByContainer",
          "type": "Boolean",
          "default": "false",
          "description": "Will disable the group by container, used when you don't want to allow the user to change group by settings",
          "required": false
        },
        {
          "name": "groupColumnDefinition",
          "type": "any",
          "default": "null",
          "description": "The column definition used when grouping is enabled for the Group column",
          "required": false
        },
        {
          "name": "treeColumnDefinition",
          "type": "any",
          "default": "null",
          "description": "The column definition used to render TreeColumn when treeify is enabled on the provided dataobject",
          "required": false
        },
        {
          "name": "itemsToRender",
          "type": "Number",
          "default": "500",
          "description": "Initial number of items to render for visual scroll.",
          "required": false
        },
        {
          "name": "createNewOverrideFn",
          "type": "Function",
          "default": "null",
          "description": "Function for creating new",
          "required": false
        },
        {
          "name": "hideSystemColumn",
          "type": "Boolean",
          "default": "false",
          "description": "When set to true will not render system column (current row indicator)",
          "required": false
        },
        {
          "name": "disableSorting",
          "type": "Boolean",
          "default": "false",
          "description": "When set to true will disable sorting",
          "required": false
        },
        {
          "name": "activeRows",
          "type": "Boolean",
          "default": "true",
          "description": "When set to false will not stylize active (current) row",
          "required": false
        },
        {
          "name": "disableBatchRecords",
          "type": "Boolean",
          "default": "false",
          "description": "When set to true will disable the new record button and new records container",
          "required": false
        },
        {
          "name": "hideActionColumn",
          "type": "Boolean",
          "default": "false",
          "description": "When set to true will not render action column",
          "required": false
        },
        {
          "name": "hideMultiselectColumn",
          "type": "Boolean",
          "default": "false",
          "description": "When set to true will not render multi-select column",
          "required": false
        },
        {
          "name": "showNewRecordsPanel",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "required": false
        },
        {
          "name": "hideNewRecords",
          "type": "Boolean",
          "default": "raw => !!raw.isLookup",
          "description": "When set to true will skip rendering of the new record rows",
          "required": false
        },
        {
          "name": "detailMessageChannelId",
          "type": "String",
          "default": "null",
          "description": "Optional id to enable the message channel on the detail iframe",
          "required": false
        },
        {
          "name": "detailMessageChannelFunctions",
          "type": "String",
          "default": "null",
          "description": "Map of functions callable by the iframe message channel",
          "required": false
        }
      ],
      "slots": [
        {
          "name": "detailTab",
          "description": "Alternative to rendering detail Iframe",
          "template": "#detailTab"
        },
        {
          "name": "detailActions",
          "template": "#detailActions"
        },
        {
          "name": "cardheader",
          "template": "#cardheader"
        },
        {
          "name": "noRowsFound",
          "template": "#noRowsFound"
        },
        {
          "name": "overlay",
          "template": "#overlay"
        },
        {
          "name": "contextmenuTop",
          "template": "#contextmenuTop=\"{row, column, close}\""
        },
        {
          "name": "contextmenu",
          "template": "#contextmenu=\"{row, column, close}\""
        },
        {
          "name": "contextmenuBottom",
          "template": "#contextmenuBottom=\"{row, column, close}\""
        },
        {
          "name": "statusbar",
          "template": "#statusbar"
        }
      ],
      "events": [
        {
          "name": "mounted",
          "description": "",
          "syntax": "@mounted=\"\""
        },
        {
          "name": "beforeCreate",
          "description": "",
          "syntax": "@beforeCreate=\"\""
        }
      ],
      "params": [],
      "exposes": [
        {
          "name": "dataColumns",
          "type": "Array"
        },
        {
          "name": "setViewPortWidth",
          "type": "Function"
        },
        {
          "name": "dataGridControl",
          "type": "Object"
        }
      ],
      "snippets": [
        {
          "title": "Example",
          "content": "",
          "code": "<{COMPONENT} multilineHeader :dataObject=\"\"><{COMPONENT=5} field=\"\" /></{COMPONENT}>",
          "language": "html"
        }
      ]
    },
    {
      "id": 53,
      "name": "Navbar",
      "description": "Navbar.",
      "type": "Component",
      "category": "General",
      "path": "o365.vue.components.ONavbar.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": "contextWhereClause",
          "type": "String",
          "default": "null",
          "description": "whereclause for context.",
          "example": ":contextWhereClause=\"IsDomain = 1\"",
          "required": false
        },
        {
          "name": "hideOrgUnitsTree",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "required": false
        },
        {
          "name": "operationMode",
          "type": "Boolean",
          "default": "false",
          "description": "Enables some sort of operation mode. Removed profile image and context. Not used.",
          "required": false
        },
        {
          "name": "domainMode",
          "type": "Boolean",
          "default": "false",
          "description": "Enables set domain in navbar.",
          "required": false
        }
      ],
      "slots": [],
      "events": [],
      "params": [],
      "exposes": [],
      "snippets": [
        {
          "title": "Example",
          "content": "",
          "code": "<[COMPONENT} hideOrgunitsTree contextWhereClause=\"IsDomain = 1\"></{COMPONENT}>",
          "language": "html"
        }
      ]
    },
    {
      "id": 54,
      "name": "Spotlight",
      "description": "Directive hooks up to click event and will show spotlight image preview for images and supported videos. Supported video formats: ['mp4','webm','ogg']",
      "type": "Directive",
      "category": "Directive",
      "path": "o365.vue.directive.spotlight.js",
      "pathtype": "Direct",
      "props": [],
      "slots": [],
      "events": [],
      "params": [],
      "exposes": [],
      "snippets": [
        {
          "title": "Example",
          "content": "",
          "code": "<div v-spotlight><div v-for=\"file in dsFiles.data.filter(x=>x.Step_ID == step.ID)\"><a :href=\"`api/file/download/aviw_Workflow_ItemsFiles/${file.PrimKey}/${file.FileName}`\"></a></div></div>",
          "language": "html"
        }
      ]
    },
    {
      "id": 55,
      "name": "Select",
      "description": "Select Input. \n\nWhy use custom select component instead of the in-built browser one? Due to browser security policies, it's not allowed to open browser select boxes through JavaScript. This means that components like DataGrid, which rely on focus to open their editors, won't be able to open them by default.",
      "type": "Component",
      "category": "Form",
      "path": "o365.vue.components.Select.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": "modelValue",
          "type": "any",
          "default": "null",
          "description": "Currently selected value",
          "required": false
        },
        {
          "name": "multiple",
          "type": "Boolean",
          "default": "false",
          "description": "Enables multiple selection",
          "required": false
        },
        {
          "name": "itemSize",
          "type": "Number",
          "default": "24",
          "description": "Height of item",
          "required": false
        },
        {
          "name": "minWidth",
          "type": "Number",
          "default": "0",
          "description": "Minimun width of input",
          "required": false
        },
        {
          "name": "clearable",
          "type": "Boolean",
          "default": "false",
          "description": "Add a clear icon into the input.",
          "required": false
        },
        {
          "name": "wrapperClass",
          "type": "String | CSS classes",
          "default": "null",
          "description": "CSS Classes for wrapper",
          "required": false
        }
      ],
      "slots": [
        {
          "name": "default",
          "description": "Slot for option elements.",
          "template": "#default=\"{target, open}\""
        }
      ],
      "events": [
        {
          "name": "update:modelValue",
          "description": "Emits when the input has been changed",
          "syntax": "@update:modelValue=\"sel => {}\""
        },
        {
          "name": "selected",
          "description": "Emits when a value has been selected",
          "syntax": "@selected=\"sel => {}\""
        }
      ],
      "params": [],
      "exposes": [],
      "snippets": [
        {
          "title": "Example",
          "content": "",
          "code": "<{COMPONENT} v-model=\"row.Alert\" class=\"form-control\"><option value=\"Danger\">Danger</option><option value=\"Warning\">Warning</option><option value=\"Success\">Success</option></{COMPONENT}>",
          "language": "html"
        }
      ]
    },
    {
      "id": 56,
      "name": "ActionSheet",
      "description": "",
      "type": "Component",
      "category": "Mobile",
      "path": "mobile.vue.components.ActionSheet.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": "modelValue",
          "type": "Boolean",
          "default": "false",
          "description": "Toggle if sheet is open or closed",
          "required": false
        }
      ],
      "slots": [
        {
          "name": "default",
          "description": "contains the options for the sheet. For example: Edit, Delete",
          "template": "#default"
        },
        {
          "name": "header",
          "description": "Content for Sheet header",
          "template": "#header"
        }
      ],
      "events": [
        {
          "name": "update:modelValue",
          "description": "Fires when sheet is toggled open or close",
          "syntax": "@update:modelValue=\"\""
        }
      ],
      "params": [],
      "exposes": [],
      "snippets": [
        {
          "title": "Example",
          "content": "",
          "code": "<div><button class=\"btn btn-primary\" @click=\"show = !show\">Toggle action sheet</button>\n<{COMPONENT} v-model=\"show\"><button @click=\"\">Edit</button><button @click=\"\">Delete</button></{COMPONENT}></div>",
          "language": "html"
        }
      ]
    },
    {
      "id": 57,
      "name": "Accordion",
      "description": "Mobile Accordion. Weirdly built. Do not use.",
      "type": "Component",
      "category": "Mobile",
      "path": "mobile.vue.components.Accordion.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": "title",
          "type": "String",
          "default": "null",
          "description": "",
          "required": false
        },
        {
          "name": "description",
          "type": "String",
          "default": "null",
          "description": "",
          "required": false
        },
        {
          "name": "dataObject",
          "type": "Object",
          "default": "null",
          "description": "",
          "required": false
        }
      ],
      "slots": [
        {
          "name": "default",
          "description": "Additional Content for Accordion Header",
          "template": "#default"
        },
        {
          "name": "title",
          "description": "Content for Accordion title",
          "template": "#title"
        },
        {
          "name": "description",
          "description": "Content for Accordion description",
          "template": "#description"
        },
        {
          "name": "items",
          "description": "Replacement for dataObject prop. Can also be used if dataObject is empty or has no data.",
          "template": "#items"
        },
        {
          "name": "footer",
          "description": "Content for Accordion footer",
          "template": "#footer"
        }
      ],
      "events": [],
      "params": [],
      "exposes": [],
      "snippets": []
    },
    {
      "id": 58,
      "name": "BottomSheet",
      "description": "A swipeable sheet that comes up from the bottom. Generally a better alternative to modals when it comes to mobile.",
      "type": "Component",
      "category": "Mobile",
      "path": "mobile.vue.components.BottomSheet.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": "modelValue",
          "type": "Boolean",
          "default": "false",
          "description": "Toggle if sheet is open or closed",
          "required": false
        },
        {
          "name": "show",
          "type": "Boolean",
          "default": "false",
          "description": "Toggle if sheet is open or closed",
          "required": false
        },
        {
          "name": "minHeight",
          "type": "Number | String",
          "default": "null",
          "description": "Minimum height of bottom sheet when it is open",
          "example": "auto | min | max | 50",
          "required": false
        },
        {
          "name": "maxHeight",
          "type": "Number | String",
          "default": "null",
          "description": "Maximum height of bottom sheet",
          "example": "auto | min | max | 50",
          "required": false
        },
        {
          "name": "fullScreen",
          "type": "Boolean",
          "default": "false",
          "description": "Toggle if sheet spans the whole screen",
          "required": false
        },
        {
          "name": "teleportTarget",
          "type": "Element",
          "default": "body",
          "description": "element where {component} should get rendered",
          "required": false
        }
      ],
      "slots": [
        {
          "name": "title",
          "description": "Content for title",
          "template": "#title"
        },
        {
          "name": "action",
          "description": "Slot for action button or similar stuff",
          "template": "#action"
        },
        {
          "name": "subheader",
          "description": "Subheader content. For Descriptions or similar stuff",
          "template": "#subheader"
        },
        {
          "name": "body",
          "description": "Body content",
          "template": "#body"
        }
      ],
      "events": [
        {
          "name": "update:modelValue",
          "description": "Fires when sheet is toggled open or close",
          "syntax": "@update:modelValue=\"\""
        },
        {
          "name": "show",
          "description": "Fires when the sheet gets opened",
          "syntax": "@show=\"\""
        },
        {
          "name": "hide",
          "description": "Fires when sheet gets closed",
          "syntax": "@hide=\"\""
        }
      ],
      "params": [],
      "exposes": [],
      "snippets": [
        {
          "title": "Example",
          "content": "",
          "code": "<div><button class=\"btn btn-primary\" @click=\"show = !show\">Toggle bottom sheet</button>\n<{COMPONENT} v-model=\"show\"><template #title>{{ $t(\"Bottom Sheet Title\") }}</template><template #body><div class=\"p-3\"><button class=\"btn btn-primary\" @click=\"show = false\">Hide bottom sheet</button></div></template></{COMPONENT}></div>",
          "language": "html"
        }
      ]
    },
    {
      "id": 59,
      "name": "FileIcon",
      "description": "Gives you an icon of the filetype of your file.",
      "type": "Component",
      "category": "General",
      "path": "o365.vue.components.FileIcon.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": "size",
          "type": "Number | String",
          "default": "1rem",
          "description": "Size of the icon",
          "required": false
        },
        {
          "name": "extension",
          "type": "String",
          "default": "null",
          "description": "file extension. Alternative for fileName prop",
          "required": false
        },
        {
          "name": "fileName",
          "type": "String",
          "default": "null",
          "description": "Alternative for extension prop",
          "required": false
        }
      ],
      "slots": [],
      "events": [],
      "params": [],
      "exposes": [],
      "snippets": [
        {
          "title": "Example",
          "content": "",
          "code": "<{COMPONENT} :fileName=\"excel.pdf\" />",
          "language": "html"
        }
      ]
    },
    {
      "id": 60,
      "name": "SearchInput",
      "description": "",
      "type": "Component",
      "category": "Form",
      "path": "o365.vue.components.SearchInput.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": "modelValue",
          "type": "String",
          "default": "null",
          "description": "Same as v-model",
          "required": false
        },
        {
          "name": "mask",
          "type": "String",
          "default": "null",
          "description": "Mask for input field",
          "required": false
        },
        {
          "name": "debounce",
          "type": "Boolean",
          "default": "false",
          "description": "enables search on every keystroke with debounce",
          "required": false
        }
      ],
      "slots": [],
      "events": [
        {
          "name": "onSearch",
          "description": "",
          "syntax": "@onSearch=\"\""
        },
        {
          "name": "update:modelValue",
          "description": "",
          "syntax": "@update:modelValue=\"\""
        }
      ],
      "params": [],
      "exposes": [],
      "snippets": [
        {
          "title": "Example",
          "content": "",
          "code": "<{COMPONENT} class=\"form-control\" @onSearch=\"search\" />",
          "language": "html"
        }
      ]
    },
    {
      "id": 61,
      "name": "PersonImage",
      "description": "Gets ProfileImage of user",
      "type": "Component",
      "category": "General",
      "path": "system.vue.components.PersonImage.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": "personId",
          "type": "Number | String",
          "default": "null",
          "description": "ID of person you want to get profilepicture from.",
          "template": "personId=\"102480\"",
          "required": false
        }
      ],
      "slots": [],
      "events": [],
      "params": [],
      "exposes": [],
      "snippets": [
        {
          "title": "Example",
          "content": "",
          "code": "<{COMPONENT} personId=\"102480\" />",
          "language": "html"
        }
      ]
    },
    {
      "id": 62,
      "name": "formatNumber",
      "description": "Function for formatting numbers",
      "type": "Function",
      "category": "Utilities",
      "path": "o365.modules.utils.js",
      "pathtype": "Object",
      "props": [],
      "slots": [],
      "events": [],
      "params": [
        {
          "name": "number",
          "type": "Number",
          "default": "null",
          "description": "Number to format",
          "required": false
        },
        {
          "name": "format",
          "type": "String",
          "default": "null",
          "description": "The way your number shall get formatted",
          "example": "0.0%",
          "required": false
        }
      ],
      "exposes": [],
      "snippets": [
        {
          "title": "Example",
          "content": "",
          "code": "{COMPONENT}(0.92, '0.0%');",
          "language": "javascript"
        }
      ]
    },
    {
      "id": 63,
      "name": "formatDate",
      "description": "function for formatting dates",
      "type": "Function",
      "category": "Utilities",
      "path": "o365.modules.utils.js",
      "pathtype": "Object",
      "props": [],
      "slots": [],
      "events": [],
      "params": [
        {
          "name": "number",
          "type": "Number",
          "default": "null",
          "description": "Number to format",
          "required": false
        },
        {
          "name": "format",
          "type": "String",
          "default": "null",
          "description": "The way your date shall get formatted",
          "example": "Short Time | General Date Short Time",
          "required": false
        }
      ],
      "exposes": [],
      "snippets": [
        {
          "title": "Example",
          "content": "",
          "code": "{COMPONENT}(new Date(), 'Short Time');",
          "language": "javascript"
        }
      ]
    },
    {
      "id": 64,
      "name": "AutoComplete",
      "description": "Autocomplete input field",
      "type": "Component",
      "category": "Form",
      "path": "o365.vue.components.Autocomplete.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": "modelValue",
          "type": "any",
          "default": "null",
          "description": "Same as v-model",
          "required": false
        },
        {
          "name": "value",
          "type": "any",
          "default": "null",
          "description": "Current Selected Value",
          "required": false
        },
        {
          "name": "dataObject",
          "type": "DataObject",
          "default": "null",
          "description": "dataObject to search from.",
          "required": false
        },
        {
          "name": "getData",
          "type": "Function",
          "default": "null",
          "description": "Alternative for dataObject prop",
          "required": false
        },
        {
          "name": "itemTitle",
          "type": "Function",
          "default": "null",
          "params": [
            {
              "name": "pRow",
              "type": "Object"
            }
          ],
          "description": "",
          "required": false
        },
        {
          "name": "bind",
          "type": "Function",
          "default": "null",
          "description": "Bind selected value to your variables",
          "example": ":bind=\"sel => { vValue = sel.ID }\"",
          "required": false
        },
        {
          "name": "field",
          "type": "String",
          "default": "null",
          "description": "Field to search from",
          "required": false
        },
        {
          "name": "itemSize",
          "type": "Number",
          "default": "24",
          "description": "Size of the individual items",
          "required": false
        },
        {
          "name": "wrapperClass",
          "type": "String | CSS classes",
          "default": "null",
          "description": "CSS Classes for wrapper",
          "required": false
        },
        {
          "name": "disableFirstItemAutoSelect",
          "type": "Boolean",
          "default": "false",
          "description": "By default first item gets selected. enable this prop to turn it off.",
          "required": false
        },
        {
          "name": "disableCloseOnEnter",
          "type": "Boolean",
          "default": "false",
          "description": "By default it autocloses when enter is pressed.",
          "required": false
        },
        {
          "name": "id",
          "type": "String",
          "default": "null",
          "description": "ID for input element",
          "required": false
        },
        {
          "name": "minWidth",
          "type": "Number | String",
          "default": "200",
          "description": "Minimum width of popup values",
          "required": false
        },
        {
          "name": "filterOperator",
          "type": "String",
          "default": "beginswith",
          "description": "Operator that is used when searching",
          "required": false
        },
        {
          "name": "hideNoResults",
          "type": "Boolean",
          "default": "false",
          "description": "Hides no results text when dataobject is empty",
          "required": false
        },
        {
          "name": "searchOnFocuz",
          "type": "Boolean",
          "default": "false",
          "description": "Only available with getData prop. When this is enabled focusing the input will do a getData function call",
          "required": false
        }
      ],
      "slots": [
        {
          "name": "noResults",
          "description": "Text for when dataObject is empty",
          "template": "#noResults"
        }
      ],
      "events": [
        {
          "name": "update:modelValue",
          "description": "fires then modelValue has changed.",
          "syntax": "@update:modelValue=\"sel => {}\""
        },
        {
          "name": "enter:input",
          "description": "fires then input has changed.",
          "syntax": "@enter:input\"\""
        },
        {
          "name": "blur:noSelection",
          "description": "",
          "syntax": "@blur:noSelection=\"\""
        }
      ],
      "params": [],
      "exposes": [],
      "snippets": [
        {
          "title": "Example",
          "content": "",
          "code": "<{COMPONENT} :value=\"dsTest.current.OrgUnit\" :dataObject=\"dsOrgUnits\" field=\"Name\" :bind=\"sel => {dsTest.current.OrgUnit = sel.Name; dsTest.current.OrgUnit_ID = sel.ID;}\"/>",
          "language": "html"
        }
      ]
    },
    {
      "id": 65,
      "name": "getQueryParameter",
      "description": "Function for getting query parameters",
      "type": "Function",
      "category": "Utilities",
      "path": "o365.modules.utils.url.ts",
      "pathtype": "Object",
      "props": [],
      "slots": [],
      "events": [],
      "params": [
        {
          "name": "key",
          "type": "String",
          "template": "{COMPONENT}(\"ID\")",
          "required": true
        }
      ],
      "exposes": [],
      "snippets": [
        {
          "title": "Example",
          "content": "",
          "code": "{COMPONENT}(\"ID\")",
          "language": "javascript"
        }
      ]
    },
    {
      "id": 66,
      "name": "setQueryParameter",
      "description": "Function for setting query parameters",
      "type": "Function",
      "category": "Utilities",
      "path": "o365.modules.utils.url.ts",
      "pathtype": "Object",
      "props": [],
      "slots": [],
      "events": [],
      "params": [
        {
          "name": "key",
          "type": "String",
          "required": true
        },
        {
          "name": "value",
          "type": "String",
          "required": true
        },
        {
          "name": "pageReload",
          "type": "Boolean",
          "description": "Set to true if you want page reload after value has been set",
          "required": false
        }
      ],
      "exposes": [],
      "snippets": [
        {
          "title": "Example",
          "content": "",
          "code": "{COMPONENT}(\"ID\", 10000)",
          "language": "javascript"
        }
      ]
    },
    {
      "id": 67,
      "name": "deleteQueryParameter",
      "description": "Function for deleting query parameters",
      "type": "Function",
      "category": "Utilities",
      "path": "o365.modules.utils.url.ts",
      "pathtype": "Object",
      "props": [],
      "slots": [],
      "events": [],
      "params": [
        {
          "name": "key",
          "type": "String",
          "required": true
        },
        {
          "name": "pageReload",
          "type": "Boolean",
          "description": "Set to true if you want page reload after value has been set",
          "required": false
        }
      ],
      "exposes": [],
      "snippets": [
        {
          "title": "Example",
          "content": "",
          "code": "{COMPONENT}(\"ID\")",
          "language": "javascript"
        }
      ]
    },
    {
      "id": 68,
      "name": "UploadDrop",
      "description": "",
      "type": "Component",
      "category": "Form",
      "path": "o365.vue.components.UploadDrop.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": "dataObject",
          "type": "Object",
          "default": "null",
          "description": "Dataobject where files get uploaded too",
          "required": true
        },
        {
          "name": "beforeUpload",
          "type": "Function",
          "default": "null",
          "description": "fires before upload. returns row as param",
          "required": false
        },
        {
          "name": "text",
          "type": "String",
          "default": "Upload",
          "description": "Does nothing. Not used",
          "required": false
        },
        {
          "name": "hideProgressBar",
          "type": "Boolean",
          "default": "false",
          "description": "Hides progress bar for uploading file",
          "required": false
        },
        {
          "name": "primKey",
          "type": "String",
          "default": "null",
          "description": "Will overwrite file with that primkey if specified.",
          "required": false
        },
        {
          "name": "routeUrl",
          "type": "String",
          "default": "null",
          "description": "Uploads files to that url?",
          "required": false
        },
        {
          "name": "disableChunks",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "required": false
        },
        {
          "name": "skipRecordCreate",
          "type": "Boolean",
          "default": "false",
          "description": "Skips creating record and just displays the file.",
          "required": false
        }
      ],
      "slots": [
        {
          "name": "default",
          "description": "default drop area",
          "template": "#default"
        }
      ],
      "events": [
        {
          "name": "uploaded",
          "description": "fires when file(s) have been uploaded",
          "syntax": "@uploaded=\"\""
        },
        {
          "name": "error",
          "description": "fires when something went wrong.",
          "syntax": "@error=\"\""
        }
      ],
      "params": [],
      "exposes": [],
      "snippets": [
        {
          "title": "Example",
          "content": "Droparea for {COMPONENT=4}",
          "code": "<{COMPONENT} :dataObject=\"dsFiles\" @uploaded=\"{COMPONENT=2}($t(`File successfully uploaded`), 'success', { autohide: true, delay: 3000 }); dsFiles.load();\"><{COMPONENT=4} :dataObject=\"dsFiles\"><{COMPONENT=5} sortable class=\"text-center\" width=\"50\" field=\"Extension\" v-slot=\"{ row }\"><{COMPONENT=59} :fileName=\"row.FileName\" /></{COMPONENT=5}><{COMPONENT=5} sortable field=\"FileName\" width=\"400\" /></{COMPONENT=4}></{COMPONENT}>",
          "language": "html"
        }
      ]
    },
    {
      "id": 69,
      "name": "FileUploadButton",
      "description": "",
      "type": "Component",
      "category": "Form",
      "path": "o365.vue.components.FileUploadButton.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": "dataObject",
          "type": "Object",
          "default": "null",
          "description": "Dataobject where files get uploaded too",
          "required": true
        },
        {
          "name": "beforeUpload",
          "type": "Function",
          "default": "null",
          "description": "fires before upload. returns row as param",
          "required": false
        },
        {
          "name": "text",
          "type": "String",
          "default": "Upload File",
          "description": "text for button",
          "required": false
        },
        {
          "name": "hideProgressBar",
          "type": "Boolean",
          "default": "false",
          "description": "Hides progress bar for uploading file",
          "required": false
        },
        {
          "name": "primKey",
          "type": "String",
          "default": "null",
          "description": "Will overwrite file with that primkey if specified.",
          "required": false
        },
        {
          "name": "accept",
          "type": "String",
          "default": "null",
          "description": "Filetypes to accept",
          "required": false
        },
        {
          "name": "disableChunks",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "required": false
        },
        {
          "name": "skipRecordCreate",
          "type": "Boolean",
          "default": "false",
          "description": "Skips creating record and just displays the file.",
          "required": false
        },
        {
          "name": "multiple",
          "type": "Boolean",
          "default": "false",
          "description": "Allows for selection multiple files.",
          "required": false
        },
        {
          "name": "showDropZone",
          "type": "Boolean",
          "default": "false",
          "description": "Shows dropzone.",
          "required": false
        }
      ],
      "slots": [],
      "events": [
        {
          "name": "uploaded",
          "description": "fires when file(s) have been uploaded",
          "syntax": "@uploaded=\"\""
        },
        {
          "name": "error",
          "description": "fires when something went wrong.",
          "syntax": "@error=\"\""
        }
      ],
      "params": [],
      "exposes": [],
      "snippets": []
    },
    {
      "id": 70,
      "name": "getOrCreateProcedure",
      "description": "",
      "type": "Function",
      "category": "Utilities",
      "path": "o365.vue.ts",
      "pathtype": "Object",
      "props": [],
      "slots": [],
      "events": [],
      "params": [
        {
          "name": "pOptions",
          "type": "Object",
          "default": "null",
          "description": "",
          "props": [
            {
              "name": "id",
              "type": "String",
              "description": "",
              "required": true
            },
            {
              "name": "procedureName",
              "type": "String",
              "description": "",
              "required": true
            },
            {
              "name": "useAlert",
              "type": "Boolean",
              "description": "",
              "required": false
            },
            {
              "name": "useTransation",
              "type": "Boolean",
              "description": "",
              "required": false
            },
            {
              "name": "timeout",
              "type": "Number",
              "description": "",
              "required": false
            },
            {
              "name": "useStreamRequest",
              "type": "Boolean",
              "description": "",
              "required": false
            }
          ],
          "required": true
        }
      ],
      "exposes": [],
      "snippets": [
        {
          "title": "Example",
          "content": "Example Procedure",
          "code": "const procExample = {COMPONENT}({id: \"procExample\", procedureName: \"astp_aPerson_CreateContact\", timeout: 42069})",
          "language": "javascript"
        }
      ]
    },
    {
      "id": 71,
      "name": "getDataObjectById",
      "description": "",
      "type": "Function",
      "category": "Utilities",
      "path": "o365.vue.ts",
      "pathtype": "Object",
      "props": [],
      "slots": [],
      "events": [],
      "params": [
        {
          "name": "pDataObject",
          "type": "String",
          "default": "null",
          "description": "Name of data object",
          "params": [],
          "example": "",
          "required": true
        }
      ],
      "exposes": [],
      "snippets": [
        {
          "title": "Example",
          "content": "",
          "code": "const dsWelds = {COMPONENT}(\"dsWelds\");",
          "language": "javascript"
        }
      ]
    },
    {
      "id": 72,
      "name": "getOrCreateDataObject",
      "description": "",
      "type": "Function",
      "category": "Utilities",
      "path": "o365.vue.ts",
      "pathtype": "Object",
      "props": [],
      "slots": [],
      "events": [],
      "params": [
        {
          "name": "pOptions",
          "type": "Object",
          "default": "null",
          "description": "",
          "params": [
            {
              "name": "id",
              "type": "String",
              "default": "null",
              "required": true
            }
          ],
          "example": "",
          "required": true
        }
      ],
      "exposes": [],
      "snippets": []
    },
    {
      "id": 73,
      "name": "context",
      "description": "",
      "type": "Object",
      "category": "Utilities",
      "path": "o365.modules.Context.ts",
      "pathtype": "Direct",
      "props": [],
      "slots": [],
      "events": [],
      "params": [],
      "exposes": [
        {
          "name": "id",
          "type": "Number",
          "description": "Gets current context id. Can be used as Domain_ID"
        },
        {
          "name": "idPath",
          "type": "String",
          "description": "Get current context IdPath"
        },
        {
          "name": "setContext",
          "type": "Function",
          "description": "Sets current context",
          "params": [
            {
              "name": "pContext_ID",
              "type": "Number",
              "description": "",
              "required": true
            },
            {
              "name": "pOptions",
              "type": "Object",
              "params": [
                {
                  "name": "preventSaving",
                  "type": "Boolean"
                },
                {
                  "name": "userTriggered",
                  "type": "Boolean",
                  "description": "Will always be true bc NT. Just kidding. True if user has selected a new Context via the Context selector dropdown (Only used by system)"
                },
                {
                  "name": "contextDropdownItems",
                  "type": "Object",
                  "params": [
                    {
                      "name": "domain",
                      "type": "String"
                    },
                    {
                      "name": "domainId",
                      "type": "Number"
                    },
                    {
                      "name": "orgUnit",
                      "type": "String"
                    },
                    {
                      "name": "orgUnitId",
                      "type": "Number"
                    }
                  ],
                  "required": false
                }
              ],
              "required": false
            }
          ]
        }
      ],
      "snippets": [
        {
          "title": "Example",
          "content": "TBA",
          "code": "",
          "language": "javascript"
        }
      ]
    },
    {
      "id": 74,
      "name": "GlobalMessenger",
      "description": "Only works on Apps with parent set on detail app",
      "type": "Object",
      "category": "Utilities",
      "path": "o365.modules.utils.GlobalMessenger.ts",
      "pathtype": "Direct",
      "props": [],
      "slots": [],
      "events": [],
      "params": [],
      "exposes": [
        {
          "name": "on",
          "type": "Function",
          "description": "Used in main app.",
          "params": [
            {
              "name": "callback",
              "type": "Function",
              "description": "Callback function",
              "template": "((pMessage) => {})"
            }
          ]
        },
        {
          "name": "post",
          "type": "Object",
          "description": "Post a event."
        }
      ],
      "snippets": [
        {
          "title": "Master App",
          "content": "",
          "code": "{COMPONENT}.on((pMessage) => { //Sending custom json from details with action='saved' and refreshing if change happended.if(pMessage && pMessage.action == 'saved'){dsDataSource.recordSource.refreshRowById(currentWorkflow.value);}});",
          "language": "javascript"
        },
        {
          "title": "Details App",
          "content": "",
          "code": "{COMPONENT}.post({ action: 'saved' });",
          "language": "javascript"
        }
      ]
    },
    {
      "id": 75,
      "name": "AttachmentLink",
      "description": "Use in files grid. Has integrated image editor.",
      "type": "Component",
      "category": "WIN",
      "path": "WIN365.vue.components.AttachmentLink.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": "dataObject",
          "type": "Object",
          "default": "null",
          "description": "Required to get the attachments data from.",
          "required": true
        },
        {
          "name": "row",
          "type": "Object",
          "default": "null",
          "description": "Datarow",
          "required": true
        },
        {
          "name": "groupName",
          "type": "String",
          "default": "''",
          "description": "Will put all items on the page of the same group together in one carousel.",
          "required": false
        },
        {
          "name": "documentViewer",
          "type": "Boolean",
          "default": "true",
          "description": "Enables or disables the ability to view documents in SpotLight (only images if false)",
          "required": false
        },
        {
          "name": "imageEditor",
          "type": "Boolean",
          "default": "false",
          "description": "Specifies whether or not the user can edit image attachments.",
          "required": false
        }
      ],
      "slots": [],
      "events": [],
      "params": [],
      "exposes": [],
      "snippets": [
        {
          "title": "Example",
          "content": "",
          "code": "<{COMPONENT=5} field=\"FileName\" v-slot=\"{ row }\" sortable width=\"400\"><{COMPONENT} :dataObject=\"dsMyFiles\" :row=\"row\" /></{COMPONENT=5}>",
          "language": "html"
        }
      ]
    },
    {
      "id": 76,
      "name": "formatFileSize",
      "description": "Formats file size",
      "type": "Function",
      "category": "Utilities",
      "path": "o365.modules.utils.js",
      "pathtype": "Object",
      "props": [],
      "slots": [],
      "events": [],
      "params": [
        {
          "name": "pFileSize",
          "type": "Number",
          "description": "File size in bytes",
          "required": true
        }
      ],
      "exposes": [],
      "snippets": [
        {
          "title": "Example",
          "content": "Returns 41.08 KB",
          "code": "{COMPONENT}(42069)",
          "language": "javascript"
        }
      ]
    },
    {
      "id": 77,
      "name": "SendMail",
      "description": "",
      "type": "Component",
      "category": "WIN",
      "path": "WIN365.vue.components.SendMail.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": "disabled",
          "type": "Boolean",
          "description": "Disables input fields",
          "default": "false",
          "required": false
        },
        {
          "name": "useRecipientAutocomplete",
          "type": "Boolean",
          "description": "Enables for Autocomplete with freetext on To, Cc and Bcc fields.",
          "default": "false",
          "required": false
        }
      ],
      "slots": [],
      "events": [
        {
          "name": "after-send",
          "description": "fires after email has been sent",
          "syntax": "@after-send=\"\""
        }
      ],
      "params": [],
      "exposes": [
        {
          "name": "refreshDraftEmail",
          "type": "Function"
        },
        {
          "name": "sendEmail",
          "type": "Function",
          "params": [
            {
              "name": "mail_id",
              "type": "Number",
              "required": false
            }
          ]
        },
        {
          "name": "setEmail",
          "type": "Function",
          "params": [
            {
              "name": "email",
              "type": "String",
              "required": true
            }
          ]
        },
        {
          "name": "dsMyEmailsAttachments",
          "type": "DataObject"
        },
        {
          "name": "dsMyDraftEmails",
          "type": "DataObject"
        }
      ],
      "snippets": [
        {
          "title": "Example",
          "content": "TBA",
          "code": "",
          "language": "html"
        }
      ]
    },
    {
      "id": 78,
      "name": "FroalaEditor",
      "description": "NB: Remember to include imports for FroalaEditor inside HTML File. \n<link href=\"https://cdn.omega365.com/libs/froala/v.4.0.15/froala_editor.pkgd.min.css\" rel=\"stylesheet\"/>\n<script src=\"https://cdn.omega365.com/libs/froala/v.4.0.15/froala_editor.pkgd.min.js\"></script>",
      "type": "Component",
      "category": "WIN",
      "path": "WIN365.vue.froalaeditor.FroalaEditor.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": "dataObject",
          "type": "Object",
          "default": "null",
          "description": "dataobject with HTMLContent column.",
          "example": "",
          "required": false
        },
        {
          "name": "boxId",
          "type": "String",
          "default": "null",
          "description": "Unique ID for editor",
          "example": "Test123",
          "required": false
        },
        {
          "name": "disabled",
          "type": "Boolean",
          "default": "false",
          "description": "Disables froalaeditor",
          "required": false
        }
      ],
      "slots": [],
      "events": [],
      "params": [],
      "exposes": [],
      "snippets": [
        {
          "title": "Example",
          "content": "",
          "code": "<{COMPONENT} :dataObject=\"dsMyDataObject\" boxId=\"myBoxId\" />",
          "language": "html"
        }
      ]
    },
    {
      "id": 79,
      "name": "FroalaWithUploadBtn",
      "description": "Froala editor with support for uploading word files. NB: Does not work yet",
      "type": "Component",
      "category": "WIN",
      "path": "WIN365.vue.components.froalaeditor.uploadworddocuments.FroalaWithUploadBtn.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": "text",
          "type": "String",
          "default": "Upload new Word Document",
          "description": "Button text",
          "required": false
        },
        {
          "name": "boxId",
          "type": "String",
          "default": "null",
          "description": "Box ID for froalaeditor",
          "example": "Description",
          "required": true
        },
        {
          "name": "dsText",
          "type": "DataObject",
          "default": "null",
          "description": "Data Object for text",
          "example": "dsMyDataSource",
          "required": false
        },
        {
          "name": "dsFilesTemp",
          "type": "DataObject",
          "default": "null",
          "description": "Temp table for uploading word files.",
          "example": "dsGeneralTemp",
          "required": false
        },
        {
          "name": "beforeUpload",
          "type": "Function",
          "default": "null",
          "description": "Fires before upload",
          "required": false
        }
      ],
      "slots": [],
      "events": [],
      "params": [],
      "exposes": [],
      "snippets": [
        {
          "title": "Example",
          "content": "",
          "code": "<{COMPONENT} :dsText=\"dsMyDataSource\" :dsFilesTemp=\"dsGeneralFilesTemp\" :boxId=\"UniqueId\" />",
          "language": "html"
        }
      ]
    },
    {
      "id": 80,
      "name": "Url",
      "description": "Url utilities",
      "type": "Class",
      "category": "Utilities",
      "path": "o365.modules.url.ts",
      "pathtype": "Direct",
      "props": [],
      "slots": [],
      "events": [],
      "params": [],
      "exposes": [
        {
          "name": "href",
          "type": "string",
          "description": ""
        },
        {
          "name": "getParam",
          "type": "Function",
          "params": [
            {
              "name": "pKey",
              "type": "String",
              "required": true
            }
          ],
          "description": ""
        },
        {
          "name": "setParam",
          "type": "Function",
          "params": [
            {
              "name": "pKey",
              "type": "String",
              "required": true
            },
            {
              "name": "pValue",
              "type": "any",
              "required": true
            }
          ],
          "description": ""
        },
        {
          "name": "decodeURL",
          "type": "Function",
          "params": [
            {
              "name": "pUrl",
              "type": "String",
              "required": true
            }
          ],
          "description": ""
        },
        {
          "name": "decodObject",
          "type": "Function",
          "params": [
            {
              "name": "pValue",
              "type": "any",
              "required": true
            }
          ],
          "description": ""
        },
        {
          "name": "setDecodedObject",
          "type": "Function",
          "params": [
            {
              "name": "pKey",
              "type": "String",
              "required": true
            },
            {
              "name": "pValue",
              "type": "any",
              "required": true
            }
          ],
          "description": ""
        },
        {
          "name": "getDecodedObject",
          "type": "Function",
          "params": [
            {
              "name": "pKey",
              "type": "String",
              "required": true
            }
          ],
          "description": ""
        }
      ],
      "snippets": []
    },
    {
      "id": 81,
      "name": "getFilesAsync",
      "description": "opens file in new tab and downloads it. returns true if success or false if something went wrong.",
      "type": "Function",
      "category": "WIN/Concatinate",
      "path": "WIN365.vue.composables.ConcatinateFile.ts",
      "pathtype": "Object",
      "props": [],
      "slots": [],
      "events": [],
      "params": [
        {
          "name": "pFiles",
          "type": "Object",
          "default": "null",
          "description": "",
          "params": [
            {
              "name": "files",
              "type": "Array",
              "default": "null",
              "params": [
                {
                  "name": "pFile",
                  "type": "Object",
                  "params": [
                    {
                      "name": "name",
                      "type": "String",
                      "description": "Name of report or file",
                      "required": false
                    },
                    {
                      "name": "filePrimkey",
                      "type": "String",
                      "description": "PrimKey of file",
                      "required": false
                    },
                    {
                      "name": "filter",
                      "type": "String",
                      "description": "Filterstring for report",
                      "required": false
                    }
                  ],
                  "required": false
                }
              ],
              "required": true
            }
          ],
          "required": true
        },
        {
          "name": "pFileName",
          "type": "String",
          "default": "null",
          "description": "Name of the file",
          "example": "",
          "required": true
        }
      ],
      "exposes": [],
      "snippets": [
        {
          "title": "Example",
          "content": "",
          "code": "const gConcatinatedFiles = ref({files: [{ name: \"aviw_aMCCR_ChecklistsSignatures\", filePrimkey: \"e20e9a04-4987-4bc8-acf5-bea7575ba0ee\" },{ name: \"aviw_aDocument_Documents\", filePrimkey: \"615d20c2-4183-44bd-b15c-fe09c6127280\" },{ name: \"arpt_aWorkPermit_WorkPermits\", filter: \"No=6278\" },]})\n{COMPONENT}(gConcatinatedFiles.value, \"test-zip.zip\").then(() => {console.log(\"get done\")})}",
          "language": "javascript"
        }
      ]
    },
    {
      "id": 82,
      "name": "saveFilesAsync",
      "description": "",
      "type": "Function",
      "category": "WIN/Concatinate",
      "path": "WIN365.vue.composables.ConcatinateFile.ts",
      "pathtype": "Object",
      "props": [],
      "slots": [],
      "events": [],
      "params": [
        {
          "name": "pFiles",
          "type": "Object",
          "default": "null",
          "description": "",
          "params": [
            {
              "name": "files",
              "type": "Array",
              "default": "null",
              "params": [
                {
                  "name": "pFile",
                  "type": "Object",
                  "params": [
                    {
                      "name": "name",
                      "type": "String",
                      "description": "Name of report or file",
                      "required": false
                    },
                    {
                      "name": "filePrimkey",
                      "type": "String",
                      "description": "PrimKey of file",
                      "required": false
                    },
                    {
                      "name": "filter",
                      "type": "String",
                      "description": "Filterstring for report",
                      "required": false
                    }
                  ],
                  "required": false
                }
              ],
              "required": true
            }
          ],
          "required": true
        },
        {
          "name": "pFileName",
          "type": "String",
          "default": "null",
          "description": "Name of the file",
          "example": "",
          "required": true
        },
        {
          "name": "pViewName",
          "type": "String",
          "default": "null",
          "description": "Name of the view",
          "example": "",
          "required": true
        },
        {
          "name": "pPrimKey",
          "type": "String",
          "default": "null",
          "description": "For overwriting files.",
          "required": true
        }
      ],
      "exposes": [],
      "snippets": [
        {
          "title": "Example",
          "content": "",
          "code": "const gConcatinatedFiles = ref({files: [{ name: \"aviw_aMCCR_ChecklistsSignatures\", filePrimkey: \"e20e9a04-4987-4bc8-acf5-bea7575ba0ee\" },{ name: \"aviw_aDocument_Documents\", filePrimkey: \"615d20c2-4183-44bd-b15c-fe09c6127280\" },{ name: \"arpt_aWorkPermit_WorkPermits\", filter: \"No=6278\" },]})\n{COMPONENT}(gConcatinatedFiles.value, \"test-save.pdf\", \"atbv_aMCCR_ChecklistsSignatures\").then(() => {console.log(\"save done\")})",
          "language": "javascript"
        }
      ]
    },
    {
      "id": 83,
      "name": "zipFilesAsync",
      "description": "zipps files",
      "type": "Function",
      "category": "WIN/Concatinate",
      "path": "WIN365.vue.composables.ConcatinateFile.ts",
      "pathtype": "Object",
      "props": [],
      "slots": [],
      "events": [],
      "params": [
        {
          "name": "pFiles",
          "type": "Object",
          "default": "null",
          "description": "",
          "params": [
            {
              "name": "files",
              "type": "Array",
              "default": "null",
              "params": [
                {
                  "name": "pFile",
                  "type": "Object",
                  "params": [
                    {
                      "name": "name",
                      "type": "String",
                      "description": "Name of report or file",
                      "required": false
                    },
                    {
                      "name": "filePrimkey",
                      "type": "String",
                      "description": "PrimKey of file",
                      "required": false
                    },
                    {
                      "name": "filter",
                      "type": "String",
                      "description": "Filterstring for report",
                      "required": false
                    }
                  ],
                  "required": false
                }
              ],
              "required": true
            }
          ],
          "required": true
        },
        {
          "name": "pFileName",
          "type": "String",
          "default": "null",
          "description": "Name of the file",
          "example": "",
          "required": true
        }
      ],
      "exposes": [],
      "snippets": [
        {
          "title": "Example",
          "content": "",
          "code": "const gConcatinatedFiles = ref({files: [{ name: \"aviw_aMCCR_ChecklistsSignatures\", filePrimkey: \"e20e9a04-4987-4bc8-acf5-bea7575ba0ee\" },{ name: \"aviw_aDocument_Documents\", filePrimkey: \"615d20c2-4183-44bd-b15c-fe09c6127280\" },{ name: \"arpt_aWorkPermit_WorkPermits\", filter: \"No=6278\" },]})\n{COMPONENT}(gConcatinatedFiles.value, \"test-save.pdf\", \"atbv_aMCCR_ChecklistsSignatures\").then(() => {console.log(\"save done\")})",
          "language": "html"
        }
      ]
    },
    {
      "id": 84,
      "name": "Cropper",
      "description": "Image cropper",
      "type": "Component",
      "category": "General",
      "path": "o365.vue.components.Cropper.vue",
      "pathtype": "Direct",
      "props": [
        {
          "name": "dataObject",
          "type": "DataObject",
          "default": "null",
          "description": "dataobject for images",
          "example": "dsPersonsImages",
          "required": true
        },
        {
          "name": "fieldName",
          "type": "String",
          "default": "null",
          "description": "image ref column field",
          "example": "",
          "required": false
        },
        {
          "name": "aspectRatio",
          "type": "Number",
          "default": "3/4",
          "description": "",
          "example": "",
          "required": false
        },
        {
          "name": "disableAspectRatioUnlocking",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "required": false
        },
        {
          "name": "disableUserRatios",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "required": false
        },
        {
          "name": "src",
          "type": "String",
          "default": "null",
          "description": "Image url source",
          "example": "",
          "required": false
        },
        {
          "name": "wrapperClass",
          "type": "String | CSS classes",
          "default": "null",
          "description": "",
          "example": "",
          "required": false
        }
      ],
      "slots": [],
      "events": [],
      "params": [],
      "exposes": [
        {
          "name": "cropper",
          "type": "Ref",
          "description": "Ref for Cropper Element"
        },
        {
          "name": "cropperControl",
          "type": "Ref",
          "description": "",
          "params": [
            {
              "name": "dataObject",
              "type": "DataObject"
            },
            {
              "name": "fieldName",
              "type": "String"
            },
            {
              "name": "aspectRatio",
              "type": "Number"
            },
            {
              "name": "cropperFunctions",
              "type": "Object",
              "params": [
                {
                  "name": "openModal",
                  "type": "Function",
                  "params": []
                },
                {
                  "name": "closeModal",
                  "type": "Function",
                  "params": []
                },
                {
                  "name": "getResult",
                  "type": "Function",
                  "params": [],
                  "description": "Gets result of cropping."
                }
              ]
            }
          ]
        }
      ],
      "snippets": [
        {
          "title": "Example",
          "content": "Persons Image",
          "code": "<{COMPONENT} :dataObject=\"dsImages\" :src=\"`/nt/api/file/view/sviw_System_PersonsImages/${dsImages.current.PrimKey}/${dsImages.current.FileRef}`\" />",
          "language": "html"
        }
      ]
    },
    {
      "id": 85,
      "name": "NumberEditor",
      "description": "Basically same as {COMPONENT=62}",
      "type": "Component",
      "category": "Form",
      "path": "o365.vue.components.inputEditors.jsx",
      "pathtype": "Direct",
      "props": [
        {
          "name": "modalValue",
          "type": "Number",
          "default": "null",
          "description": "",
          "example": "",
          "required": false
        },
        {
          "name": "column",
          "type": "Object",
          "default": "",
          "description": "",
          "example": "",
          "required": false
        },
        {
          "name": "format",
          "type": "String",
          "default": "",
          "description": "",
          "example": "1234.567",
          "required": false
        },
        {
          "name": "returnAsString",
          "type": "Boolean",
          "default": "false",
          "description": "",
          "example": "",
          "required": false
        }
      ],
      "slots": [],
      "events": [
        {
          "name": "update:modelValue",
          "description": "",
          "syntax": "@update:modelValue=\"\""
        }
      ],
      "params": [],
      "exposes": [
        {
          "name": "elRef",
          "type": "Ref",
          "description": "element ref"
        },
        {
          "name": "activateEditor",
          "type": "Function",
          "description": "Activates editor"
        }
      ],
      "snippets": [
        {
          "title": "Example",
          "content": "",
          "code": "<{COMPONENT} v-model=\"dsPurchaseOrdersItems.current.UnitPrice\" format=\"1234.567\" />",
          "language": "html"
        }
      ]
    },
    {
      "id": 86,
      "name": "API",
      "description": "Api functions",
      "type": "Module",
      "category": "General",
      "path": "o365.modules.data.api.ts",
      "pathtype": "Direct",
      "props": [],
      "slots": [],
      "events": [],
      "params": [],
      "exposes": [
        {
          "name": "request",
          "type": "Function",
          "description": "Alternative for fetch",
          "params": [
            {
              "name": "pOptions",
              "type": "Object",
              "decription": "",
              "params": [
                {
                  "name": "requestInfo",
                  "type": "String | RequestInfo",
                  "description": "",
                  "required": true
                },
                {
                  "name": "method",
                  "type": "GET | HEAD | POST | PUT | DELETE | CONNECT | OPTIONS | TRACE | PATCH",
                  "description": "Method for request",
                  "required": false
                },
                {
                  "name": "headers",
                  "type": "Object",
                  "description": "",
                  "required": false
                },
                {
                  "name": "body",
                  "type": "BodyInit",
                  "description": "",
                  "required": false
                },
                {
                  "name": "mode",
                  "type": "RequestMode",
                  "description": "",
                  "required": false
                },
                {
                  "name": "credentials",
                  "type": "RequestCredentials",
                  "description": "",
                  "required": false
                },
                {
                  "name": "cache",
                  "type": "default | force-cache | no-cache | no-store | only-if-cached | reload",
                  "description": "",
                  "required": false
                },
                {
                  "name": "redirect",
                  "type": "error | follow | manual",
                  "description": "",
                  "required": false
                },
                {
                  "name": "integrity",
                  "type": "String",
                  "description": "",
                  "required": false
                },
                {
                  "name": "keepalive",
                  "type": "Boolean",
                  "description": "",
                  "required": false
                },
                {
                  "name": "abortSignal",
                  "type": "AbortSignal",
                  "description": "",
                  "required": false
                },
                {
                  "name": "responseStatusHandler",
                  "type": "Function | Boolean",
                  "description": "",
                  "required": false
                },
                {
                  "name": "responseBodyHandler",
                  "type": "ResponseHandler | Boolean",
                  "description": "",
                  "required": false
                },
                {
                  "name": "showErrorDialog",
                  "type": "Boolean",
                  "description": "",
                  "required": false
                },
                {
                  "name": "skipJwtCheck",
                  "type": "Boolean",
                  "description": "Skips Json web token check",
                  "required": false
                }
              ],
              "required": true
            }
          ]
        },
        {
          "name": "requestGet",
          "type": "Function",
          "description": "",
          "params": [
            {
              "name": "url",
              "type": "String",
              "required": true
            },
            {
              "name": "pOptions",
              "type": "Object",
              "params": [
                {
                  "name": "requestInfo",
                  "type": "String | RequestInfo",
                  "description": "",
                  "required": true
                },
                {
                  "name": "method",
                  "type": "GET | HEAD | POST | PUT | DELETE | CONNECT | OPTIONS | TRACE | PATCH",
                  "description": "Method for request",
                  "required": false
                },
                {
                  "name": "headers",
                  "type": "Object",
                  "description": "",
                  "required": false
                },
                {
                  "name": "body",
                  "type": "BodyInit",
                  "description": "",
                  "required": false
                },
                {
                  "name": "mode",
                  "type": "RequestMode",
                  "description": "",
                  "required": false
                },
                {
                  "name": "credentials",
                  "type": "RequestCredentials",
                  "description": "",
                  "required": false
                },
                {
                  "name": "cache",
                  "type": "default | force-cache | no-cache | no-store | only-if-cached | reload",
                  "description": "",
                  "required": false
                },
                {
                  "name": "redirect",
                  "type": "error | follow | manual",
                  "description": "",
                  "required": false
                },
                {
                  "name": "integrity",
                  "type": "String",
                  "description": "",
                  "required": false
                },
                {
                  "name": "keepalive",
                  "type": "Boolean",
                  "description": "",
                  "required": false
                },
                {
                  "name": "abortSignal",
                  "type": "AbortSignal",
                  "description": "",
                  "required": false
                },
                {
                  "name": "responseStatusHandler",
                  "type": "Function | Boolean",
                  "description": "",
                  "required": false
                },
                {
                  "name": "responseBodyHandler",
                  "type": "ResponseHandler | Boolean",
                  "description": "",
                  "required": false
                },
                {
                  "name": "showErrorDialog",
                  "type": "Boolean",
                  "description": "",
                  "required": false
                },
                {
                  "name": "skipJwtCheck",
                  "type": "Boolean",
                  "description": "Skips Json web token check",
                  "required": false
                }
              ],
              "required": false
            }
          ]
        },
        {
          "name": "requestPost",
          "type": "Function",
          "description": "",
          "params": [
            {
              "name": "url",
              "type": "String",
              "required": true
            },
            {
              "name": "body",
              "type": "BodyInit",
              "required": false
            },
            {
              "name": "abortSignal",
              "type": "AbortSignal",
              "required": false
            },
            {
              "name": "credentials",
              "type": "RequestCredentials",
              "default": "same-origin",
              "required": true
            }
          ]
        },
        {
          "name": "requestFileCustomHeaders",
          "type": "Function",
          "description": "",
          "params": [
            {
              "name": "url",
              "type": "String",
              "required": true
            },
            {
              "name": "body",
              "type": "BodyInit",
              "required": false
            },
            {
              "name": "headers",
              "type": "Object",
              "description": "",
              "required": false
            }
          ]
        },
        {
          "name": "requestText",
          "type": "Function",
          "description": "",
          "params": [
            {
              "name": "url",
              "type": "String",
              "required": true
            },
            {
              "name": "body",
              "type": "BodyInit",
              "required": false
            },
            {
              "name": "method",
              "type": "GET | HEAD | POST | PUT | DELETE | CONNECT | OPTIONS | TRACE | PATCH",
              "default": "GET",
              "required": true
            }
          ]
        },
        {
          "name": "requestHtml",
          "type": "Function",
          "description": "",
          "params": [
            {
              "name": "url",
              "type": "String",
              "required": true
            },
            {
              "name": "body",
              "type": "BodyInit",
              "required": false
            },
            {
              "name": "method",
              "type": "GET | HEAD | POST | PUT | DELETE | CONNECT | OPTIONS | TRACE | PATCH",
              "default": "GET",
              "required": true
            }
          ]
        },
        {
          "name": "requestFile",
          "type": "Function",
          "description": "",
          "params": [
            {
              "name": "url",
              "type": "String",
              "required": true
            },
            {
              "name": "body",
              "type": "BodyInit",
              "required": false
            }
          ]
        }
      ],
      "snippets": [
        {
          "title": "Example request",
          "content": "",
          "code": "",
          "language": "javascript"
        },
        {
          "title": "Example requestGet",
          "content": "",
          "code": "",
          "language": "javascript"
        },
        {
          "title": "Example requestPost",
          "content": "",
          "code": "",
          "language": "javascript"
        },
        {
          "title": "Example requestFileCustomHeaders",
          "content": "",
          "code": "{COMPONENT}.requestFileCustomHeaders(`/file/view/reporting/arpt_aMeeting_Meetings/arpt_aMeeting_Meetings.pdf?Filter=ID=${dsMinutesOfMeetings.current.ID}`, '', { method: 'GET', headers: new Headers({ 'Accept': 'application/json', 'Content-type': 'application/json; charset=utf-8', 'X-NT-API': 'false' }) }).then(async (pResponse) => {})",
          "language": "javascript"
        },
        {
          "title": "Example requestText",
          "content": "",
          "code": "",
          "language": "javascript"
        },
        {
          "title": "Example requestHtml",
          "content": "TBA",
          "code": "{COMPONENT}.requestFile(`/nt/file/view/reporting/arpt_aMeeting_Meetings/arpt_aMeeting_Meetings.pdf`, { filter: `ID=${dsMinutesOfMeetings.current.ID}`}).then(async (pResponse) => {})",
          "language": "javascript"
        },
        {
          "title": "Example requestFile",
          "content": "Can be used to get reports",
          "code": "{COMPONENT}.requestFile(`/nt/file/view/reporting/arpt_aMeeting_Meetings/arpt_aMeeting_Meetings.pdf`, { filter: `ID=${dsMinutesOfMeetings.current.ID}`}).then(async (pResponse) => {})",
          "language": "javascript"
        }
      ]
    },
    {
      "id": 86,
      "name": "TEMPLATE",
      "description": "",
      "type": "TEMPLATE",
      "category": "",
      "path": "",
      "pathtype": "Direct",
      "props": [
        {
          "name": "",
          "type": "",
          "default": "",
          "description": "",
          "example": "",
          "required": false
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "",
          "template": "#"
        }
      ],
      "events": [
        {
          "name": "",
          "description": "",
          "syntax": "@=\"\""
        }
      ],
      "params": [],
      "exposes": [
        {
          "name": "",
          "type": "",
          "description": ""
        }
      ],
      "snippets": [
        {
          "title": "Example",
          "content": "",
          "code": "",
          "language": "html"
        }
      ]
    }
  ]
}
